{
    "contracts/AddressResolver.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/interfaces/IAddressResolver.sol",
            "contracts/interfaces/ISynthetix.sol"
        ],
        "contracts": {
            "AddressResolver": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 14
                    },
                    {
                        "name": "importAddresses",
                        "signature": "importAddresses(bytes32[] names, address[] destinations)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 19,
                                "name": "require(..., Input lengths must match)"
                            }
                        ],
                        "lineNumber": 18
                    },
                    {
                        "name": "getAddress",
                        "signature": "getAddress(bytes32 name)",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 28
                    },
                    {
                        "name": "requireAndGetAddress",
                        "signature": "requireAndGetAddress(bytes32 name, string reason)",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 34,
                                "name": "require(..., calldata)"
                            }
                        ],
                        "lineNumber": 32
                    },
                    {
                        "name": "getSynth",
                        "signature": "getSynth(bytes32 key)",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 40,
                                "name": "require(..., Cannot find Synthetix address)"
                            }
                        ],
                        "lineNumber": 38
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "repository",
                        "constant": false,
                        "type": "mapping(bytes32 => address)",
                        "lineNumber": 12,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "IAddressResolver"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/Owned.sol": {
        "imports": [],
        "contracts": {
            "Owned": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner)",
                        "returns": "()",
                        "events": [
                            "OwnerChanged"
                        ],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 10,
                                "name": "require(..., Owner address cannot be 0)"
                            }
                        ],
                        "lineNumber": 9
                    },
                    {
                        "name": "nominateNewOwner",
                        "signature": "nominateNewOwner(address _owner)",
                        "returns": "()",
                        "events": [
                            "OwnerNominated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 15
                    },
                    {
                        "name": "acceptOwnership",
                        "signature": "acceptOwnership()",
                        "returns": "()",
                        "events": [
                            "OwnerChanged"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 21,
                                "name": "require(..., You must be nominated before you can accept ownership)"
                            }
                        ],
                        "lineNumber": 20
                    }
                ],
                "events": [
                    {
                        "name": "OwnerNominated",
                        "parameters": "(address newOwner)",
                        "lineNumber": 32
                    },
                    {
                        "name": "OwnerChanged",
                        "parameters": "(address oldOwner, address newOwner)",
                        "lineNumber": 33
                    }
                ],
                "variables": [
                    {
                        "name": "owner",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 6,
                        "visibility": "public"
                    },
                    {
                        "name": "nominatedOwner",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 7,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyOwner",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 27
                    }
                ],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/interfaces/IAddressResolver.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IAddressResolver": {
                "functions": [
                    {
                        "name": "getAddress",
                        "signature": "getAddress(bytes32 name)",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 5
                    },
                    {
                        "name": "getSynth",
                        "signature": "getSynth(bytes32 key)",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 7
                    },
                    {
                        "name": "requireAndGetAddress",
                        "signature": "requireAndGetAddress(bytes32 name, string reason)",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 9
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/ISynthetix.sol": {
        "imports": [
            "contracts/interfaces/ISynth.sol"
        ],
        "contracts": {},
        "interfaces": {
            "ISynthetix": {
                "functions": [
                    {
                        "name": "availableCurrencyKeys",
                        "signature": "availableCurrencyKeys()",
                        "returns": "(bytes32[])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "availableSynthCount",
                        "signature": "availableSynthCount()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "collateral",
                        "signature": "collateral(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "collateralisationRatio",
                        "signature": "collateralisationRatio(address issuer)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 14
                    },
                    {
                        "name": "debtBalanceOf",
                        "signature": "debtBalanceOf(address issuer, bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 16
                    },
                    {
                        "name": "debtBalanceOfAndTotalDebt",
                        "signature": "debtBalanceOfAndTotalDebt(address issuer, bytes32 currencyKey)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 18
                    },
                    {
                        "name": "isWaitingPeriod",
                        "signature": "isWaitingPeriod(bytes32 currencyKey)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 23
                    },
                    {
                        "name": "maxIssuableSynths",
                        "signature": "maxIssuableSynths(address issuer)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 25
                    },
                    {
                        "name": "remainingIssuableSynths",
                        "signature": "remainingIssuableSynths(address issuer)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 27
                    },
                    {
                        "name": "synths",
                        "signature": "synths(bytes32 currencyKey)",
                        "returns": "(contract ISynth)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 36
                    },
                    {
                        "name": "synthsByAddress",
                        "signature": "synthsByAddress(address synthAddress)",
                        "returns": "(bytes32)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 38
                    },
                    {
                        "name": "totalIssuedSynths",
                        "signature": "totalIssuedSynths(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 40
                    },
                    {
                        "name": "totalIssuedSynthsExcludeEtherCollateral",
                        "signature": "totalIssuedSynthsExcludeEtherCollateral(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 42
                    },
                    {
                        "name": "transferableSynthetix",
                        "signature": "transferableSynthetix(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 44
                    },
                    {
                        "name": "burnSynths",
                        "signature": "burnSynths(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 47
                    },
                    {
                        "name": "burnSynthsOnBehalf",
                        "signature": "burnSynthsOnBehalf(address burnForAddress, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 49
                    },
                    {
                        "name": "burnSynthsToTarget",
                        "signature": "burnSynthsToTarget()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 51
                    },
                    {
                        "name": "burnSynthsToTargetOnBehalf",
                        "signature": "burnSynthsToTargetOnBehalf(address burnForAddress)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 53
                    },
                    {
                        "name": "exchange",
                        "signature": "exchange(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 55
                    },
                    {
                        "name": "exchangeOnBehalf",
                        "signature": "exchangeOnBehalf(address exchangeForAddress, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 61
                    },
                    {
                        "name": "issueMaxSynths",
                        "signature": "issueMaxSynths()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 68
                    },
                    {
                        "name": "issueMaxSynthsOnBehalf",
                        "signature": "issueMaxSynthsOnBehalf(address issueForAddress)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 70
                    },
                    {
                        "name": "issueSynths",
                        "signature": "issueSynths(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 72
                    },
                    {
                        "name": "issueSynthsOnBehalf",
                        "signature": "issueSynthsOnBehalf(address issueForAddress, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 74
                    },
                    {
                        "name": "mint",
                        "signature": "mint()",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 76
                    },
                    {
                        "name": "settle",
                        "signature": "settle(bytes32 currencyKey)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 78
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/ISynth.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "ISynth": {
                "functions": [
                    {
                        "name": "currencyKey",
                        "signature": "currencyKey()",
                        "returns": "(bytes32)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "transferableSynths",
                        "signature": "transferableSynths(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "transferAndSettle",
                        "signature": "transferAndSettle(address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 11
                    },
                    {
                        "name": "transferFromAndSettle",
                        "signature": "transferFromAndSettle(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 13
                    },
                    {
                        "name": "burn",
                        "signature": "burn(address account, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 20
                    },
                    {
                        "name": "issue",
                        "signature": "issue(address account, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 22
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/DelegateApprovals.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/interfaces/IDelegateApprovals.sol",
            "contracts/EternalStorage.sol"
        ],
        "contracts": {
            "DelegateApprovals": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, contract EternalStorage _eternalStorage)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 30
                    },
                    {
                        "name": "_getKey",
                        "signature": "_getKey(bytes32 _action, address _authoriser, address _delegate)",
                        "returns": "(bytes32)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 39
                    },
                    {
                        "name": "canBurnFor",
                        "signature": "canBurnFor(address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 48
                    },
                    {
                        "name": "canIssueFor",
                        "signature": "canIssueFor(address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 52
                    },
                    {
                        "name": "canClaimFor",
                        "signature": "canClaimFor(address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 56
                    },
                    {
                        "name": "canExchangeFor",
                        "signature": "canExchangeFor(address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 60
                    },
                    {
                        "name": "approvedAll",
                        "signature": "approvedAll(address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 64
                    },
                    {
                        "name": "_checkApproval",
                        "signature": "_checkApproval(bytes32 action, address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 71
                    },
                    {
                        "name": "approveAllDelegatePowers",
                        "signature": "approveAllDelegatePowers(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 84
                    },
                    {
                        "name": "removeAllDelegatePowers",
                        "signature": "removeAllDelegatePowers(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 89
                    },
                    {
                        "name": "approveBurnOnBehalf",
                        "signature": "approveBurnOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 96
                    },
                    {
                        "name": "removeBurnOnBehalf",
                        "signature": "removeBurnOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 100
                    },
                    {
                        "name": "approveIssueOnBehalf",
                        "signature": "approveIssueOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 105
                    },
                    {
                        "name": "removeIssueOnBehalf",
                        "signature": "removeIssueOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 109
                    },
                    {
                        "name": "approveClaimOnBehalf",
                        "signature": "approveClaimOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 114
                    },
                    {
                        "name": "removeClaimOnBehalf",
                        "signature": "removeClaimOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 118
                    },
                    {
                        "name": "approveExchangeOnBehalf",
                        "signature": "approveExchangeOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 123
                    },
                    {
                        "name": "removeExchangeOnBehalf",
                        "signature": "removeExchangeOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 127
                    },
                    {
                        "name": "_setApproval",
                        "signature": "_setApproval(bytes32 action, address authoriser, address delegate)",
                        "returns": "()",
                        "events": [
                            "Approval"
                        ],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 136,
                                "name": "require(..., Can't delegate to address(0))"
                            }
                        ],
                        "lineNumber": 131
                    },
                    {
                        "name": "_withdrawApproval",
                        "signature": "_withdrawApproval(bytes32 action, address authoriser, address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 141
                    },
                    {
                        "name": "setEternalStorage",
                        "signature": "setEternalStorage(contract EternalStorage _eternalStorage)",
                        "returns": "()",
                        "events": [
                            "EternalStorageUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 154,
                                "name": "require(..., Can't set eternalStorage to address(0))"
                            }
                        ],
                        "lineNumber": 153
                    }
                ],
                "events": [
                    {
                        "name": "Approval",
                        "parameters": "(address authoriser, address delegate, bytes32 action)",
                        "lineNumber": 160
                    },
                    {
                        "name": "WithdrawApproval",
                        "parameters": "(address authoriser, address delegate, bytes32 action)",
                        "lineNumber": 161
                    },
                    {
                        "name": "EternalStorageUpdated",
                        "parameters": "(address newEternalStorage)",
                        "lineNumber": 162
                    }
                ],
                "variables": [
                    {
                        "name": "BURN_FOR_ADDRESS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 13,
                        "visibility": "public"
                    },
                    {
                        "name": "ISSUE_FOR_ADDRESS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 14,
                        "visibility": "public"
                    },
                    {
                        "name": "CLAIM_FOR_ADDRESS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 15,
                        "visibility": "public"
                    },
                    {
                        "name": "EXCHANGE_FOR_ADDRESS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 16,
                        "visibility": "public"
                    },
                    {
                        "name": "APPROVE_ALL",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 17,
                        "visibility": "public"
                    },
                    {
                        "name": "_delegatableFunctions",
                        "constant": false,
                        "type": "bytes32[5]",
                        "lineNumber": 19,
                        "visibility": "private"
                    },
                    {
                        "name": "eternalStorage",
                        "constant": false,
                        "type": "contract EternalStorage",
                        "lineNumber": 28,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "IDelegateApprovals"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/interfaces/IDelegateApprovals.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IDelegateApprovals": {
                "functions": [
                    {
                        "name": "canBurnFor",
                        "signature": "canBurnFor(address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "canIssueFor",
                        "signature": "canIssueFor(address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "canClaimFor",
                        "signature": "canClaimFor(address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "canExchangeFor",
                        "signature": "canExchangeFor(address authoriser, address delegate)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "approveAllDelegatePowers",
                        "signature": "approveAllDelegatePowers(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 15
                    },
                    {
                        "name": "removeAllDelegatePowers",
                        "signature": "removeAllDelegatePowers(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 17
                    },
                    {
                        "name": "approveBurnOnBehalf",
                        "signature": "approveBurnOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 19
                    },
                    {
                        "name": "removeBurnOnBehalf",
                        "signature": "removeBurnOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 21
                    },
                    {
                        "name": "approveIssueOnBehalf",
                        "signature": "approveIssueOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 23
                    },
                    {
                        "name": "removeIssueOnBehalf",
                        "signature": "removeIssueOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 25
                    },
                    {
                        "name": "approveClaimOnBehalf",
                        "signature": "approveClaimOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 27
                    },
                    {
                        "name": "removeClaimOnBehalf",
                        "signature": "removeClaimOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 29
                    },
                    {
                        "name": "approveExchangeOnBehalf",
                        "signature": "approveExchangeOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 31
                    },
                    {
                        "name": "removeExchangeOnBehalf",
                        "signature": "removeExchangeOnBehalf(address delegate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 33
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/EternalStorage.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/State.sol"
        ],
        "contracts": {
            "EternalStorage": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _associatedContract)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "State"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 17
                    },
                    {
                        "name": "getUIntValue",
                        "signature": "getUIntValue(bytes32 record)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 29
                    },
                    {
                        "name": "setUIntValue",
                        "signature": "setUIntValue(bytes32 record, uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 33
                    },
                    {
                        "name": "deleteUIntValue",
                        "signature": "deleteUIntValue(bytes32 record)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 37
                    },
                    {
                        "name": "getStringValue",
                        "signature": "getStringValue(bytes32 record)",
                        "returns": "(string)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 42
                    },
                    {
                        "name": "setStringValue",
                        "signature": "setStringValue(bytes32 record, string value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 46
                    },
                    {
                        "name": "deleteStringValue",
                        "signature": "deleteStringValue(bytes32 record)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 50
                    },
                    {
                        "name": "getAddressValue",
                        "signature": "getAddressValue(bytes32 record)",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 55
                    },
                    {
                        "name": "setAddressValue",
                        "signature": "setAddressValue(bytes32 record, address value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 59
                    },
                    {
                        "name": "deleteAddressValue",
                        "signature": "deleteAddressValue(bytes32 record)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 63
                    },
                    {
                        "name": "getBytesValue",
                        "signature": "getBytesValue(bytes32 record)",
                        "returns": "(bytes)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 68
                    },
                    {
                        "name": "setBytesValue",
                        "signature": "setBytesValue(bytes32 record, bytes value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 72
                    },
                    {
                        "name": "deleteBytesValue",
                        "signature": "deleteBytesValue(bytes32 record)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 76
                    },
                    {
                        "name": "getBytes32Value",
                        "signature": "getBytes32Value(bytes32 record)",
                        "returns": "(bytes32)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 81
                    },
                    {
                        "name": "setBytes32Value",
                        "signature": "setBytes32Value(bytes32 record, bytes32 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 85
                    },
                    {
                        "name": "deleteBytes32Value",
                        "signature": "deleteBytes32Value(bytes32 record)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 89
                    },
                    {
                        "name": "getBooleanValue",
                        "signature": "getBooleanValue(bytes32 record)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 94
                    },
                    {
                        "name": "setBooleanValue",
                        "signature": "setBooleanValue(bytes32 record, bool value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 98
                    },
                    {
                        "name": "deleteBooleanValue",
                        "signature": "deleteBooleanValue(bytes32 record)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 102
                    },
                    {
                        "name": "getIntValue",
                        "signature": "getIntValue(bytes32 record)",
                        "returns": "(int256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 107
                    },
                    {
                        "name": "setIntValue",
                        "signature": "setIntValue(bytes32 record, int256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 111
                    },
                    {
                        "name": "deleteIntValue",
                        "signature": "deleteIntValue(bytes32 record)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 115
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "UIntStorage",
                        "constant": false,
                        "type": "mapping(bytes32 => uint256)",
                        "lineNumber": 20,
                        "visibility": "internal"
                    },
                    {
                        "name": "StringStorage",
                        "constant": false,
                        "type": "mapping(bytes32 => string)",
                        "lineNumber": 21,
                        "visibility": "internal"
                    },
                    {
                        "name": "AddressStorage",
                        "constant": false,
                        "type": "mapping(bytes32 => address)",
                        "lineNumber": 22,
                        "visibility": "internal"
                    },
                    {
                        "name": "BytesStorage",
                        "constant": false,
                        "type": "mapping(bytes32 => bytes)",
                        "lineNumber": 23,
                        "visibility": "internal"
                    },
                    {
                        "name": "Bytes32Storage",
                        "constant": false,
                        "type": "mapping(bytes32 => bytes32)",
                        "lineNumber": 24,
                        "visibility": "internal"
                    },
                    {
                        "name": "BooleanStorage",
                        "constant": false,
                        "type": "mapping(bytes32 => bool)",
                        "lineNumber": 25,
                        "visibility": "internal"
                    },
                    {
                        "name": "IntStorage",
                        "constant": false,
                        "type": "mapping(bytes32 => int256)",
                        "lineNumber": 26,
                        "visibility": "internal"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "State"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/State.sol": {
        "imports": [
            "contracts/Owned.sol"
        ],
        "contracts": {
            "State": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _associatedContract)",
                        "returns": "()",
                        "events": [
                            "AssociatedContractUpdated"
                        ],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 15,
                                "name": "require(..., Owner must be set)"
                            }
                        ],
                        "lineNumber": 13
                    },
                    {
                        "name": "setAssociatedContract",
                        "signature": "setAssociatedContract(address _associatedContract)",
                        "returns": "()",
                        "events": [
                            "AssociatedContractUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 24
                    }
                ],
                "events": [
                    {
                        "name": "AssociatedContractUpdated",
                        "parameters": "(address associatedContract)",
                        "lineNumber": 38
                    }
                ],
                "variables": [
                    {
                        "name": "associatedContract",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 11,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyAssociatedContract",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 31
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/Depot.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/SelfDestructible.sol",
            "contracts/Pausable.sol",
            "openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol",
            "contracts/MixinResolver.sol",
            "contracts/interfaces/IDepot.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/interfaces/IERC20.sol",
            "contracts/interfaces/IExchangeRates.sol"
        ],
        "contracts": {
            "Depot": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address payable _fundsWallet, address _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "SelfDestructible",
                            "Pausable",
                            "MixinResolver"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 85
                    },
                    {
                        "name": "setMaxEthPurchase",
                        "signature": "setMaxEthPurchase(uint256 _maxEthPurchase)",
                        "returns": "()",
                        "events": [
                            "MaxEthPurchaseUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 95
                    },
                    {
                        "name": "setFundsWallet",
                        "signature": "setFundsWallet(address payable _fundsWallet)",
                        "returns": "()",
                        "events": [
                            "FundsWalletUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 104
                    },
                    {
                        "name": "setMinimumDepositAmount",
                        "signature": "setMinimumDepositAmount(uint256 _amount)",
                        "returns": "()",
                        "events": [
                            "MinimumDepositAmountUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 115,
                                "name": "require(..., Minimum deposit amount must be greater than UNIT)"
                            }
                        ],
                        "lineNumber": 113
                    },
                    {
                        "name": "fallback",
                        "signature": "()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "nonReentrant",
                            "rateNotStale",
                            "notPaused"
                        ],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [],
                        "lineNumber": 125
                    },
                    {
                        "name": "exchangeEtherForSynths",
                        "signature": "exchangeEtherForSynths()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "nonReentrant",
                            "rateNotStale",
                            "notPaused"
                        ],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [],
                        "lineNumber": 133
                    },
                    {
                        "name": "_exchangeEtherForSynths",
                        "signature": "_exchangeEtherForSynths()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 147,
                                "name": "require(..., ETH amount above maxEthPurchase limit)"
                            }
                        ],
                        "lineNumber": 146
                    },
                    {
                        "name": "exchangeEtherForSynthsAtRate",
                        "signature": "exchangeEtherForSynthsAtRate(uint256 guaranteedRate)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "rateNotStale",
                            "notPaused"
                        ],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [
                            {
                                "lineNumber": 273,
                                "name": "require(..., Guaranteed rate would not be received)"
                            }
                        ],
                        "lineNumber": 264
                    },
                    {
                        "name": "_exchangeEtherForSNX",
                        "signature": "_exchangeEtherForSNX()",
                        "returns": "(uint256)",
                        "events": [
                            "Exchange"
                        ],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 278
                    },
                    {
                        "name": "exchangeEtherForSNX",
                        "signature": "exchangeEtherForSNX()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "rateNotStale",
                            "rateNotStale",
                            "notPaused"
                        ],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [],
                        "lineNumber": 296
                    },
                    {
                        "name": "exchangeEtherForSNXAtRate",
                        "signature": "exchangeEtherForSNXAtRate(uint256 guaranteedEtherRate, uint256 guaranteedSynthetixRate)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "rateNotStale",
                            "rateNotStale",
                            "notPaused"
                        ],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [
                            {
                                "lineNumber": 325,
                                "name": "require(..., Guaranteed ether rate would not be received)"
                            },
                            {
                                "lineNumber": 326,
                                "name": "require(..., Guaranteed synthetix rate would not be received)"
                            }
                        ],
                        "lineNumber": 315
                    },
                    {
                        "name": "_exchangeSynthsForSNX",
                        "signature": "_exchangeSynthsForSNX(uint256 synthAmount)",
                        "returns": "(uint256)",
                        "events": [
                            "Exchange"
                        ],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 334
                    },
                    {
                        "name": "exchangeSynthsForSNX",
                        "signature": "exchangeSynthsForSNX(uint256 synthAmount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "rateNotStale",
                            "notPaused"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 355
                    },
                    {
                        "name": "exchangeSynthsForSNXAtRate",
                        "signature": "exchangeSynthsForSNXAtRate(uint256 synthAmount, uint256 guaranteedRate)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "rateNotStale",
                            "notPaused"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 380,
                                "name": "require(..., Guaranteed rate would not be received)"
                            }
                        ],
                        "lineNumber": 372
                    },
                    {
                        "name": "withdrawSynthetix",
                        "signature": "withdrawSynthetix(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 389
                    },
                    {
                        "name": "withdrawMyDepositedSynths",
                        "signature": "withdrawMyDepositedSynths()",
                        "returns": "()",
                        "events": [
                            "SynthWithdrawal"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 430,
                                "name": "require(..., You have no deposits to withdraw.)"
                            }
                        ],
                        "lineNumber": 405
                    },
                    {
                        "name": "depositSynths",
                        "signature": "depositSynths(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 442
                    },
                    {
                        "name": "synthetixReceivedForSynths",
                        "signature": "synthetixReceivedForSynths(uint256 amount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 474
                    },
                    {
                        "name": "synthetixReceivedForEther",
                        "signature": "synthetixReceivedForEther(uint256 amount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 484
                    },
                    {
                        "name": "synthsReceivedForEther",
                        "signature": "synthsReceivedForEther(uint256 amount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 497
                    },
                    {
                        "name": "synthsUSD",
                        "signature": "synthsUSD()",
                        "returns": "(contract IERC20)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 504
                    },
                    {
                        "name": "synthetix",
                        "signature": "synthetix()",
                        "returns": "(contract IERC20)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 508
                    },
                    {
                        "name": "exchangeRates",
                        "signature": "exchangeRates()",
                        "returns": "(contract IExchangeRates)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 512
                    }
                ],
                "events": [
                    {
                        "name": "MaxEthPurchaseUpdated",
                        "parameters": "(uint256 amount)",
                        "lineNumber": 525
                    },
                    {
                        "name": "FundsWalletUpdated",
                        "parameters": "(address newFundsWallet)",
                        "lineNumber": 526
                    },
                    {
                        "name": "Exchange",
                        "parameters": "(string fromCurrency, uint256 fromAmount, string toCurrency, uint256 toAmount)",
                        "lineNumber": 527
                    },
                    {
                        "name": "SynthWithdrawal",
                        "parameters": "(address user, uint256 amount)",
                        "lineNumber": 528
                    },
                    {
                        "name": "SynthDeposit",
                        "parameters": "(address user, uint256 amount, uint256 depositIndex)",
                        "lineNumber": 529
                    },
                    {
                        "name": "SynthDepositRemoved",
                        "parameters": "(address user, uint256 amount, uint256 depositIndex)",
                        "lineNumber": 530
                    },
                    {
                        "name": "SynthDepositNotAccepted",
                        "parameters": "(address user, uint256 amount, uint256 minimum)",
                        "lineNumber": 531
                    },
                    {
                        "name": "MinimumDepositAmountUpdated",
                        "parameters": "(uint256 amount)",
                        "lineNumber": 532
                    },
                    {
                        "name": "NonPayableContract",
                        "parameters": "(address receiver, uint256 amount)",
                        "lineNumber": 533
                    },
                    {
                        "name": "ClearedDeposit",
                        "parameters": "(address fromAddress, address toAddress, uint256 fromETHAmount, uint256 toAmount, uint256 depositIndex)",
                        "lineNumber": 534
                    }
                ],
                "variables": [
                    {
                        "name": "SNX",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 24,
                        "visibility": "internal"
                    },
                    {
                        "name": "ETH",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 25,
                        "visibility": "internal"
                    },
                    {
                        "name": "fundsWallet",
                        "constant": false,
                        "type": "address payable",
                        "lineNumber": 32,
                        "visibility": "public"
                    },
                    {
                        "name": "deposits",
                        "constant": false,
                        "type": "mapping(uint256 => struct Depot.SynthDepositEntry)",
                        "lineNumber": 53,
                        "visibility": "public"
                    },
                    {
                        "name": "depositStartIndex",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 55,
                        "visibility": "public"
                    },
                    {
                        "name": "depositEndIndex",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 57,
                        "visibility": "public"
                    },
                    {
                        "name": "totalSellableDeposits",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 62,
                        "visibility": "public"
                    },
                    {
                        "name": "minimumDepositAmount",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 65,
                        "visibility": "public"
                    },
                    {
                        "name": "maxEthPurchase",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 68,
                        "visibility": "public"
                    },
                    {
                        "name": "smallDeposits",
                        "constant": false,
                        "type": "mapping(address => uint256)",
                        "lineNumber": 73,
                        "visibility": "public"
                    },
                    {
                        "name": "CONTRACT_SYNTHSUSD",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 77,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXRATES",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 78,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHETIX",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 79,
                        "visibility": "private"
                    },
                    {
                        "name": "addressesToCache",
                        "constant": false,
                        "type": "bytes32[24]",
                        "lineNumber": 81,
                        "visibility": "private"
                    }
                ],
                "modifiers": [
                    {
                        "name": "rateNotStale",
                        "parameters": "(bytes32 currencyKey)",
                        "visibility": "internal",
                        "lineNumber": 518
                    }
                ],
                "structs": [
                    {
                        "name": "SynthDepositEntry",
                        "members": [
                            {
                                "name": "user",
                                "type": "address payable"
                            },
                            {
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "lineNumber": 35
                    }
                ],
                "inherits": [
                    "Owned",
                    "SelfDestructible",
                    "Pausable",
                    "ReentrancyGuard",
                    "MixinResolver",
                    "IDepot"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/SelfDestructible.sol": {
        "imports": [
            "contracts/Owned.sol"
        ],
        "contracts": {
            "SelfDestructible": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "()",
                        "returns": "()",
                        "events": [
                            "SelfDestructBeneficiaryUpdated"
                        ],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 18,
                                "name": "require(..., Owner must be set)"
                            }
                        ],
                        "lineNumber": 16
                    },
                    {
                        "name": "setSelfDestructBeneficiary",
                        "signature": "setSelfDestructBeneficiary(address payable _beneficiary)",
                        "returns": "()",
                        "events": [
                            "SelfDestructBeneficiaryUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 29,
                                "name": "require(..., Beneficiary must not be zero)"
                            }
                        ],
                        "lineNumber": 28
                    },
                    {
                        "name": "initiateSelfDestruct",
                        "signature": "initiateSelfDestruct()",
                        "returns": "()",
                        "events": [
                            "SelfDestructInitiated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 39
                    },
                    {
                        "name": "terminateSelfDestruct",
                        "signature": "terminateSelfDestruct()",
                        "returns": "()",
                        "events": [
                            "SelfDestructTerminated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 49
                    },
                    {
                        "name": "selfDestruct",
                        "signature": "selfDestruct()",
                        "returns": "()",
                        "events": [
                            "SelfDestructed"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 61,
                                "name": "require(..., Self Destruct not yet initiated)"
                            },
                            {
                                "lineNumber": 62,
                                "name": "require(..., Self destruct delay not met)"
                            }
                        ],
                        "lineNumber": 60
                    }
                ],
                "events": [
                    {
                        "name": "SelfDestructTerminated",
                        "parameters": "()",
                        "lineNumber": 67
                    },
                    {
                        "name": "SelfDestructed",
                        "parameters": "(address beneficiary)",
                        "lineNumber": 68
                    },
                    {
                        "name": "SelfDestructInitiated",
                        "parameters": "(uint256 selfDestructDelay)",
                        "lineNumber": 69
                    },
                    {
                        "name": "SelfDestructBeneficiaryUpdated",
                        "parameters": "(address newBeneficiary)",
                        "lineNumber": 70
                    }
                ],
                "variables": [
                    {
                        "name": "SELFDESTRUCT_DELAY",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 9,
                        "visibility": "public"
                    },
                    {
                        "name": "initiationTime",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 11,
                        "visibility": "public"
                    },
                    {
                        "name": "selfDestructInitiated",
                        "constant": false,
                        "type": "bool",
                        "lineNumber": 12,
                        "visibility": "public"
                    },
                    {
                        "name": "selfDestructBeneficiary",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 14,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/Pausable.sol": {
        "imports": [
            "contracts/Owned.sol"
        ],
        "contracts": {
            "Pausable": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 14,
                                "name": "require(..., Owner must be set)"
                            }
                        ],
                        "lineNumber": 12
                    },
                    {
                        "name": "setPaused",
                        "signature": "setPaused(bool _paused)",
                        "returns": "()",
                        "events": [
                            "PauseChanged"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 22
                    }
                ],
                "events": [
                    {
                        "name": "PauseChanged",
                        "parameters": "(bool isPaused)",
                        "lineNumber": 40
                    }
                ],
                "variables": [
                    {
                        "name": "lastPauseTime",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 9,
                        "visibility": "public"
                    },
                    {
                        "name": "paused",
                        "constant": false,
                        "type": "bool",
                        "lineNumber": 10,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "notPaused",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 42
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol": {
        "imports": [],
        "contracts": {
            "ReentrancyGuard": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 19
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "_guardCounter",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 17,
                        "visibility": "private"
                    }
                ],
                "modifiers": [
                    {
                        "name": "nonReentrant",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 32
                    }
                ],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/MixinResolver.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/AddressResolver.sol"
        ],
        "contracts": {
            "MixinResolver": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _resolver, bytes32[24] _addressesToCache)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 22,
                                "name": "require(..., Owner must be set)"
                            }
                        ],
                        "lineNumber": 20
                    },
                    {
                        "name": "setResolverAndSyncCache",
                        "signature": "setResolverAndSyncCache(contract AddressResolver _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 38
                    },
                    {
                        "name": "requireAndGetAddress",
                        "signature": "requireAndGetAddress(bytes32 name, string reason)",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 52,
                                "name": "require(..., memory)"
                            }
                        ],
                        "lineNumber": 50
                    },
                    {
                        "name": "isResolverCached",
                        "signature": "isResolverCached(contract AddressResolver _resolver)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 58
                    },
                    {
                        "name": "getResolverAddressesRequired",
                        "signature": "getResolverAddressesRequired()",
                        "returns": "(bytes32[24])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 76
                    },
                    {
                        "name": "appendToAddressCache",
                        "signature": "appendToAddressCache(bytes32 name)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 89,
                                "name": "require(..., Max resolver cache size met)"
                            }
                        ],
                        "lineNumber": 87
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "resolver",
                        "constant": false,
                        "type": "contract AddressResolver",
                        "lineNumber": 12,
                        "visibility": "public"
                    },
                    {
                        "name": "addressCache",
                        "constant": false,
                        "type": "mapping(bytes32 => address)",
                        "lineNumber": 14,
                        "visibility": "private"
                    },
                    {
                        "name": "resolverAddressesRequired",
                        "constant": false,
                        "type": "bytes32[]",
                        "lineNumber": 16,
                        "visibility": "public"
                    },
                    {
                        "name": "MAX_ADDRESSES_FROM_RESOLVER",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 18,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/interfaces/IDepot.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IDepot": {
                "functions": [
                    {
                        "name": "fundsWallet",
                        "signature": "fundsWallet()",
                        "returns": "(address payable)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "maxEthPurchase",
                        "signature": "maxEthPurchase()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "minimumDepositAmount",
                        "signature": "minimumDepositAmount()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "synthsReceivedForEther",
                        "signature": "synthsReceivedForEther(uint256 amount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "totalSellableDeposits",
                        "signature": "totalSellableDeposits()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 14
                    },
                    {
                        "name": "depositSynths",
                        "signature": "depositSynths(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 17
                    },
                    {
                        "name": "exchangeEtherForSynths",
                        "signature": "exchangeEtherForSynths()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [],
                        "lineNumber": 19
                    },
                    {
                        "name": "exchangeEtherForSynthsAtRate",
                        "signature": "exchangeEtherForSynthsAtRate(uint256 guaranteedRate)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [],
                        "lineNumber": 21
                    },
                    {
                        "name": "withdrawMyDepositedSynths",
                        "signature": "withdrawMyDepositedSynths()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 23
                    },
                    {
                        "name": "exchangeEtherForSNX",
                        "signature": "exchangeEtherForSNX()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [],
                        "lineNumber": 26
                    },
                    {
                        "name": "exchangeEtherForSNXAtRate",
                        "signature": "exchangeEtherForSNXAtRate(uint256 guaranteedRate, uint256 guaranteedSynthetixRate)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [],
                        "lineNumber": 28
                    },
                    {
                        "name": "exchangeSynthsForSNX",
                        "signature": "exchangeSynthsForSNX(uint256 synthAmount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 30
                    },
                    {
                        "name": "exchangeSynthsForSNXAtRate",
                        "signature": "exchangeSynthsForSNXAtRate(uint256 synthAmount, uint256 guaranteedRate)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 32
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/SafeDecimalMath.sol": {
        "imports": [
            "openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol"
        ],
        "contracts": {},
        "interfaces": {},
        "libraries": {
            "SafeDecimalMath": {
                "functions": [
                    {
                        "name": "unit",
                        "signature": "unit()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 25
                    },
                    {
                        "name": "preciseUnit",
                        "signature": "preciseUnit()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 32
                    },
                    {
                        "name": "multiplyDecimal",
                        "signature": "multiplyDecimal(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 45
                    },
                    {
                        "name": "_multiplyDecimalRound",
                        "signature": "_multiplyDecimalRound(uint256 x, uint256 y, uint256 precisionUnit)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "private",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 62
                    },
                    {
                        "name": "multiplyDecimalRoundPrecise",
                        "signature": "multiplyDecimalRoundPrecise(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 89
                    },
                    {
                        "name": "multiplyDecimalRound",
                        "signature": "multiplyDecimalRound(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 105
                    },
                    {
                        "name": "divideDecimal",
                        "signature": "divideDecimal(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 118
                    },
                    {
                        "name": "_divideDecimalRound",
                        "signature": "_divideDecimalRound(uint256 x, uint256 y, uint256 precisionUnit)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "private",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 131
                    },
                    {
                        "name": "divideDecimalRound",
                        "signature": "divideDecimalRound(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 153
                    },
                    {
                        "name": "divideDecimalRoundPrecise",
                        "signature": "divideDecimalRoundPrecise(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 165
                    },
                    {
                        "name": "decimalToPreciseDecimal",
                        "signature": "decimalToPreciseDecimal(uint256 i)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 172
                    },
                    {
                        "name": "preciseDecimalToDecimal",
                        "signature": "preciseDecimalToDecimal(uint256 i)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 179
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "decimals",
                        "constant": true,
                        "type": "uint8",
                        "lineNumber": 12,
                        "visibility": "public"
                    },
                    {
                        "name": "highPrecisionDecimals",
                        "constant": true,
                        "type": "uint8",
                        "lineNumber": 13,
                        "visibility": "public"
                    },
                    {
                        "name": "UNIT",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 16,
                        "visibility": "public"
                    },
                    {
                        "name": "PRECISE_UNIT",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 19,
                        "visibility": "public"
                    },
                    {
                        "name": "UNIT_TO_HIGH_PRECISION_CONVERSION_FACTOR",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 20,
                        "visibility": "private"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        }
    },
    "openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {},
        "libraries": {
            "SafeMath": {
                "functions": [
                    {
                        "name": "add",
                        "signature": "add(uint256 a, uint256 b)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [
                            {
                                "lineNumber": 28,
                                "name": "require(..., SafeMath: addition overflow)"
                            }
                        ],
                        "lineNumber": 26
                    },
                    {
                        "name": "sub",
                        "signature": "sub(uint256 a, uint256 b)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [
                            {
                                "lineNumber": 43,
                                "name": "require(..., SafeMath: subtraction overflow)"
                            }
                        ],
                        "lineNumber": 42
                    },
                    {
                        "name": "mul",
                        "signature": "mul(uint256 a, uint256 b)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [
                            {
                                "lineNumber": 67,
                                "name": "require(..., SafeMath: multiplication overflow)"
                            }
                        ],
                        "lineNumber": 58
                    },
                    {
                        "name": "div",
                        "signature": "div(uint256 a, uint256 b)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [
                            {
                                "lineNumber": 85,
                                "name": "require(..., SafeMath: division by zero)"
                            }
                        ],
                        "lineNumber": 83
                    },
                    {
                        "name": "mod",
                        "signature": "mod(uint256 a, uint256 b)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [
                            {
                                "lineNumber": 104,
                                "name": "require(..., SafeMath: modulo by zero)"
                            }
                        ],
                        "lineNumber": 103
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        }
    },
    "contracts/interfaces/IERC20.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IERC20": {
                "functions": [
                    {
                        "name": "name",
                        "signature": "name()",
                        "returns": "(string)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "symbol",
                        "signature": "symbol()",
                        "returns": "(string)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "decimals",
                        "signature": "decimals()",
                        "returns": "(uint8)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "totalSupply",
                        "signature": "totalSupply()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 13
                    },
                    {
                        "name": "balanceOf",
                        "signature": "balanceOf(address owner)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 15
                    },
                    {
                        "name": "allowance",
                        "signature": "allowance(address owner, address spender)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 17
                    },
                    {
                        "name": "transfer",
                        "signature": "transfer(address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 20
                    },
                    {
                        "name": "approve",
                        "signature": "approve(address spender, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 22
                    },
                    {
                        "name": "transferFrom",
                        "signature": "transferFrom(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 24
                    }
                ],
                "events": [
                    {
                        "name": "Transfer",
                        "parameters": "(address from, address to, uint256 value)",
                        "lineNumber": 31
                    },
                    {
                        "name": "Approval",
                        "parameters": "(address owner, address spender, uint256 value)",
                        "lineNumber": 33
                    }
                ],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/IExchangeRates.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IExchangeRates": {
                "functions": [
                    {
                        "name": "aggregators",
                        "signature": "aggregators(bytes32 currencyKey)",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "anyRateIsStale",
                        "signature": "anyRateIsStale(bytes32[] currencyKeys)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "currentRoundForRate",
                        "signature": "currentRoundForRate(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "effectiveValue",
                        "signature": "effectiveValue(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "effectiveValueAtRound",
                        "signature": "effectiveValueAtRound(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, uint256 roundIdForSrc, uint256 roundIdForDest)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 18
                    },
                    {
                        "name": "getCurrentRoundId",
                        "signature": "getCurrentRoundId(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 26
                    },
                    {
                        "name": "getLastRoundIdBeforeElapsedSecs",
                        "signature": "getLastRoundIdBeforeElapsedSecs(bytes32 currencyKey, uint256 startingRoundId, uint256 startingTimestamp, uint256 timediff)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 28
                    },
                    {
                        "name": "inversePricing",
                        "signature": "inversePricing(bytes32 currencyKey)",
                        "returns": "(uint256, uint256, uint256, bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 35
                    },
                    {
                        "name": "lastRateUpdateTimes",
                        "signature": "lastRateUpdateTimes(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 45
                    },
                    {
                        "name": "oracle",
                        "signature": "oracle()",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 47
                    },
                    {
                        "name": "rateAndTimestampAtRound",
                        "signature": "rateAndTimestampAtRound(bytes32 currencyKey, uint256 roundId)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 49
                    },
                    {
                        "name": "rateForCurrency",
                        "signature": "rateForCurrency(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 51
                    },
                    {
                        "name": "rateIsFrozen",
                        "signature": "rateIsFrozen(bytes32 currencyKey)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 53
                    },
                    {
                        "name": "rateIsStale",
                        "signature": "rateIsStale(bytes32 currencyKey)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 55
                    },
                    {
                        "name": "ratesAndStaleForCurrencies",
                        "signature": "ratesAndStaleForCurrencies(bytes32[] currencyKeys)",
                        "returns": "(uint256[], bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 57
                    },
                    {
                        "name": "ratesForCurrencies",
                        "signature": "ratesForCurrencies(bytes32[] currencyKeys)",
                        "returns": "(uint256[])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 59
                    },
                    {
                        "name": "rateStalePeriod",
                        "signature": "rateStalePeriod()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 61
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/EscrowChecker.sol": {
        "imports": [],
        "contracts": {
            "EscrowChecker": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(contract ISynthetixEscrow _esc)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 15
                    },
                    {
                        "name": "checkAccountSchedule",
                        "signature": "checkAccountSchedule(address account)",
                        "returns": "(uint256[16])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 19
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "synthetix_escrow",
                        "constant": false,
                        "type": "contract ISynthetixEscrow",
                        "lineNumber": 13,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {
            "ISynthetixEscrow": {
                "functions": [
                    {
                        "name": "numVestingEntries",
                        "signature": "numVestingEntries(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 5
                    },
                    {
                        "name": "getVestingScheduleEntry",
                        "signature": "getVestingScheduleEntry(address account, uint256 index)",
                        "returns": "(uint256[2])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 7
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/EtherCollateral.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/Pausable.sol",
            "openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol",
            "contracts/MixinResolver.sol",
            "contracts/interfaces/IEtherCollateral.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/interfaces/ISystemStatus.sol",
            "contracts/interfaces/IFeePool.sol",
            "contracts/interfaces/ISynth.sol",
            "contracts/interfaces/IERC20.sol",
            "contracts/interfaces/IDepot.sol"
        ],
        "contracts": {
            "EtherCollateral": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "Pausable",
                            "MixinResolver"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 105
                    },
                    {
                        "name": "setCollateralizationRatio",
                        "signature": "setCollateralizationRatio(uint256 ratio)",
                        "returns": "()",
                        "events": [
                            "CollateralizationRatioUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 117,
                                "name": "require(..., Too high)"
                            },
                            {
                                "lineNumber": 118,
                                "name": "require(..., Too low)"
                            }
                        ],
                        "lineNumber": 116
                    },
                    {
                        "name": "setInterestRate",
                        "signature": "setInterestRate(uint256 _interestRate)",
                        "returns": "()",
                        "events": [
                            "InterestRateUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 124,
                                "name": "require(..., Interest rate cannot be less that the SECONDS_IN_A_YEAR)"
                            },
                            {
                                "lineNumber": 125,
                                "name": "require(..., Interest cannot be more than 100% APR)"
                            }
                        ],
                        "lineNumber": 123
                    },
                    {
                        "name": "setIssueFeeRate",
                        "signature": "setIssueFeeRate(uint256 _issueFeeRate)",
                        "returns": "()",
                        "events": [
                            "IssueFeeRateUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 131
                    },
                    {
                        "name": "setIssueLimit",
                        "signature": "setIssueLimit(uint256 _issueLimit)",
                        "returns": "()",
                        "events": [
                            "IssueLimitUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 136
                    },
                    {
                        "name": "setMinLoanSize",
                        "signature": "setMinLoanSize(uint256 _minLoanSize)",
                        "returns": "()",
                        "events": [
                            "MinLoanSizeUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 141
                    },
                    {
                        "name": "setAccountLoanLimit",
                        "signature": "setAccountLoanLimit(uint256 _loanLimit)",
                        "returns": "()",
                        "events": [
                            "AccountLoanLimitUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 148,
                                "name": "require(..., Owner cannot set higher than HARD_CAP)"
                            }
                        ],
                        "lineNumber": 146
                    },
                    {
                        "name": "setLoanLiquidationOpen",
                        "signature": "setLoanLiquidationOpen(bool _loanLiquidationOpen)",
                        "returns": "()",
                        "events": [
                            "LoanLiquidationOpenUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 154,
                                "name": "require(..., Before liquidation deadline)"
                            }
                        ],
                        "lineNumber": 153
                    },
                    {
                        "name": "getContractInfo",
                        "signature": "getContractInfo()",
                        "returns": "(uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256, bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 161
                    },
                    {
                        "name": "issuanceRatio",
                        "signature": "issuanceRatio()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 198
                    },
                    {
                        "name": "loanAmountFromCollateral",
                        "signature": "loanAmountFromCollateral(uint256 collateralAmount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 204
                    },
                    {
                        "name": "collateralAmountForLoan",
                        "signature": "collateralAmountForLoan(uint256 loanAmount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 208
                    },
                    {
                        "name": "currentInterestOnLoan",
                        "signature": "currentInterestOnLoan(address _account, uint256 _loanID)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 212
                    },
                    {
                        "name": "accruedInterestOnLoan",
                        "signature": "accruedInterestOnLoan(uint256 _loanAmount, uint256 _seconds)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 219
                    },
                    {
                        "name": "calculateMintingFee",
                        "signature": "calculateMintingFee(address _account, uint256 _loanID)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 225
                    },
                    {
                        "name": "openLoanIDsByAccount",
                        "signature": "openLoanIDsByAccount(address _account)",
                        "returns": "(uint256[])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 231
                    },
                    {
                        "name": "getLoan",
                        "signature": "getLoan(address _account, uint256 _loanID)",
                        "returns": "(address, uint256, uint256, uint256, uint256, uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 254
                    },
                    {
                        "name": "loanLifeSpan",
                        "signature": "loanLifeSpan(address _account, uint256 _loanID)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 279
                    },
                    {
                        "name": "openLoan",
                        "signature": "openLoan()",
                        "returns": "(uint256)",
                        "events": [
                            "LoanCreated"
                        ],
                        "modifiers": [
                            "notPaused",
                            "nonReentrant"
                        ],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [
                            {
                                "lineNumber": 290,
                                "name": "require(..., Not enough ETH to create this loan. Please see the minLoanSize)"
                            },
                            {
                                "lineNumber": 293,
                                "name": "require(..., Loans are now being liquidated)"
                            },
                            {
                                "lineNumber": 296,
                                "name": "require(..., Each account is limted to 50 loans)"
                            },
                            {
                                "lineNumber": 302,
                                "name": "require(..., Loan Amount exceeds the supply cap.)"
                            }
                        ],
                        "lineNumber": 286
                    },
                    {
                        "name": "closeLoan",
                        "signature": "closeLoan(uint256 loanID)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "nonReentrant"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 330
                    },
                    {
                        "name": "liquidateUnclosedLoan",
                        "signature": "liquidateUnclosedLoan(address _loanCreatorsAddress, uint256 _loanID)",
                        "returns": "()",
                        "events": [
                            "LoanLiquidated"
                        ],
                        "modifiers": [
                            "nonReentrant"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 336,
                                "name": "require(..., Liquidation is not open)"
                            }
                        ],
                        "lineNumber": 335
                    },
                    {
                        "name": "_closeLoan",
                        "signature": "_closeLoan(address account, uint256 loanID)",
                        "returns": "()",
                        "events": [
                            "LoanClosed"
                        ],
                        "modifiers": [],
                        "visibility": "private",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 351,
                                "name": "require(..., Loan does not exist)"
                            },
                            {
                                "lineNumber": 352,
                                "name": "require(..., Loan already closed)"
                            },
                            {
                                "lineNumber": 353,
                                "name": "require(..., You do not have the required Synth balance to close this loan.)"
                            },
                            {
                                "lineNumber": 373,
                                "name": "require(..., The sUSD Depot does not have enough sUSD to buy for fees)"
                            }
                        ],
                        "lineNumber": 345
                    },
                    {
                        "name": "_getLoanFromStorage",
                        "signature": "_getLoanFromStorage(address account, uint256 loanID)",
                        "returns": "(struct EtherCollateral.SynthLoanStruct)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "private",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 389
                    },
                    {
                        "name": "_recordLoanClosure",
                        "signature": "_recordLoanClosure(struct EtherCollateral.SynthLoanStruct synthLoan)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "private",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 398
                    },
                    {
                        "name": "_incrementTotalLoansCounter",
                        "signature": "_incrementTotalLoansCounter()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "private",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 412
                    },
                    {
                        "name": "_calculateMintingFee",
                        "signature": "_calculateMintingFee(struct EtherCollateral.SynthLoanStruct synthLoan)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "private",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 421
                    },
                    {
                        "name": "_loanLifeSpan",
                        "signature": "_loanLifeSpan(struct EtherCollateral.SynthLoanStruct synthLoan)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "private",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 425
                    },
                    {
                        "name": "systemStatus",
                        "signature": "systemStatus()",
                        "returns": "(contract ISystemStatus)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 434
                    },
                    {
                        "name": "synthsETH",
                        "signature": "synthsETH()",
                        "returns": "(contract ISynth)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 438
                    },
                    {
                        "name": "synthsUSD",
                        "signature": "synthsUSD()",
                        "returns": "(contract ISynth)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 442
                    },
                    {
                        "name": "depot",
                        "signature": "depot()",
                        "returns": "(contract IDepot)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 446
                    }
                ],
                "events": [
                    {
                        "name": "CollateralizationRatioUpdated",
                        "parameters": "(uint256 ratio)",
                        "lineNumber": 452
                    },
                    {
                        "name": "InterestRateUpdated",
                        "parameters": "(uint256 interestRate)",
                        "lineNumber": 453
                    },
                    {
                        "name": "IssueFeeRateUpdated",
                        "parameters": "(uint256 issueFeeRate)",
                        "lineNumber": 454
                    },
                    {
                        "name": "IssueLimitUpdated",
                        "parameters": "(uint256 issueLimit)",
                        "lineNumber": 455
                    },
                    {
                        "name": "MinLoanSizeUpdated",
                        "parameters": "(uint256 minLoanSize)",
                        "lineNumber": 456
                    },
                    {
                        "name": "AccountLoanLimitUpdated",
                        "parameters": "(uint256 loanLimit)",
                        "lineNumber": 457
                    },
                    {
                        "name": "LoanLiquidationOpenUpdated",
                        "parameters": "(bool loanLiquidationOpen)",
                        "lineNumber": 458
                    },
                    {
                        "name": "LoanCreated",
                        "parameters": "(address account, uint256 loanID, uint256 amount)",
                        "lineNumber": 459
                    },
                    {
                        "name": "LoanClosed",
                        "parameters": "(address account, uint256 loanID, uint256 feesPaid)",
                        "lineNumber": 460
                    },
                    {
                        "name": "LoanLiquidated",
                        "parameters": "(address account, uint256 loanID, address liquidator)",
                        "lineNumber": 461
                    }
                ],
                "variables": [
                    {
                        "name": "ONE_THOUSAND",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 27,
                        "visibility": "internal"
                    },
                    {
                        "name": "ONE_HUNDRED",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 28,
                        "visibility": "internal"
                    },
                    {
                        "name": "SECONDS_IN_A_YEAR",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 30,
                        "visibility": "internal"
                    },
                    {
                        "name": "FEE_ADDRESS",
                        "constant": true,
                        "type": "address",
                        "lineNumber": 33,
                        "visibility": "internal"
                    },
                    {
                        "name": "collateralizationRatio",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 38,
                        "visibility": "public"
                    },
                    {
                        "name": "interestRate",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 41,
                        "visibility": "public"
                    },
                    {
                        "name": "interestPerSecond",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 42,
                        "visibility": "public"
                    },
                    {
                        "name": "issueFeeRate",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 45,
                        "visibility": "public"
                    },
                    {
                        "name": "issueLimit",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 48,
                        "visibility": "public"
                    },
                    {
                        "name": "minLoanSize",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 51,
                        "visibility": "public"
                    },
                    {
                        "name": "accountLoanLimit",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 54,
                        "visibility": "public"
                    },
                    {
                        "name": "loanLiquidationOpen",
                        "constant": false,
                        "type": "bool",
                        "lineNumber": 57,
                        "visibility": "public"
                    },
                    {
                        "name": "liquidationDeadline",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 60,
                        "visibility": "public"
                    },
                    {
                        "name": "totalIssuedSynths",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 65,
                        "visibility": "public"
                    },
                    {
                        "name": "totalLoansCreated",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 68,
                        "visibility": "public"
                    },
                    {
                        "name": "totalOpenLoanCount",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 71,
                        "visibility": "public"
                    },
                    {
                        "name": "accountsSynthLoans",
                        "constant": false,
                        "type": "mapping(address => struct EtherCollateral.SynthLoanStruct[])",
                        "lineNumber": 90,
                        "visibility": "public"
                    },
                    {
                        "name": "accountOpenLoanCounter",
                        "constant": false,
                        "type": "mapping(address => uint256)",
                        "lineNumber": 93,
                        "visibility": "public"
                    },
                    {
                        "name": "CONTRACT_SYSTEMSTATUS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 97,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHSETH",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 98,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHSUSD",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 99,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_DEPOT",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 100,
                        "visibility": "private"
                    },
                    {
                        "name": "addressesToCache",
                        "constant": false,
                        "type": "bytes32[24]",
                        "lineNumber": 102,
                        "visibility": "private"
                    }
                ],
                "modifiers": [],
                "structs": [
                    {
                        "name": "SynthLoanStruct",
                        "members": [
                            {
                                "name": "account",
                                "type": "address"
                            },
                            {
                                "name": "collateralAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "loanAmount",
                                "type": "uint256"
                            },
                            {
                                "name": "timeCreated",
                                "type": "uint256"
                            },
                            {
                                "name": "loanID",
                                "type": "uint256"
                            },
                            {
                                "name": "timeClosed",
                                "type": "uint256"
                            }
                        ],
                        "lineNumber": 74
                    }
                ],
                "inherits": [
                    "Owned",
                    "Pausable",
                    "ReentrancyGuard",
                    "MixinResolver",
                    "IEtherCollateral"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/interfaces/IEtherCollateral.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IEtherCollateral": {
                "functions": [
                    {
                        "name": "totalIssuedSynths",
                        "signature": "totalIssuedSynths()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "totalLoansCreated",
                        "signature": "totalLoansCreated()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "totalOpenLoanCount",
                        "signature": "totalOpenLoanCount()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "openLoan",
                        "signature": "openLoan()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [],
                        "lineNumber": 13
                    },
                    {
                        "name": "closeLoan",
                        "signature": "closeLoan(uint256 loanID)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 15
                    },
                    {
                        "name": "liquidateUnclosedLoan",
                        "signature": "liquidateUnclosedLoan(address _loanCreatorsAddress, uint256 _loanID)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 17
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/ISystemStatus.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "ISystemStatus": {
                "functions": [
                    {
                        "name": "requireSystemActive",
                        "signature": "requireSystemActive()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "requireIssuanceActive",
                        "signature": "requireIssuanceActive()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "requireExchangeActive",
                        "signature": "requireExchangeActive()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "requireSynthActive",
                        "signature": "requireSynthActive(bytes32 currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "requireSynthsActive",
                        "signature": "requireSynthsActive(bytes32 sourceCurrencyKey, bytes32 destinationCurrencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 14
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/IFeePool.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IFeePool": {
                "functions": [
                    {
                        "name": "amountReceivedFromExchange",
                        "signature": "amountReceivedFromExchange(uint256 value)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "exchangeFeeRate",
                        "signature": "exchangeFeeRate()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "FEE_ADDRESS",
                        "signature": "FEE_ADDRESS()",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 11
                    },
                    {
                        "name": "feesAvailable",
                        "signature": "feesAvailable(address account)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 13
                    },
                    {
                        "name": "isFeesClaimable",
                        "signature": "isFeesClaimable(address account)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 15
                    },
                    {
                        "name": "totalFeesAvailable",
                        "signature": "totalFeesAvailable()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 17
                    },
                    {
                        "name": "totalRewardsAvailable",
                        "signature": "totalRewardsAvailable()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 19
                    },
                    {
                        "name": "claimFees",
                        "signature": "claimFees()",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 22
                    },
                    {
                        "name": "claimOnBehalf",
                        "signature": "claimOnBehalf(address claimingForAddress)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 24
                    },
                    {
                        "name": "closeCurrentFeePeriod",
                        "signature": "closeCurrentFeePeriod()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 26
                    },
                    {
                        "name": "appendAccountIssuanceRecord",
                        "signature": "appendAccountIssuanceRecord(address account, uint256 lockedAmount, uint256 debtEntryIndex)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 29
                    },
                    {
                        "name": "recordFeePaid",
                        "signature": "recordFeePaid(uint256 sUSDAmount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 35
                    },
                    {
                        "name": "setRewardsToDistribute",
                        "signature": "setRewardsToDistribute(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 37
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/Exchanger.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/MixinResolver.sol",
            "contracts/interfaces/IExchanger.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/interfaces/IERC20.sol",
            "contracts/interfaces/ISystemStatus.sol",
            "contracts/interfaces/IExchangeState.sol",
            "contracts/interfaces/IExchangeRates.sol",
            "contracts/interfaces/ISynthetix.sol",
            "contracts/interfaces/IFeePool.sol",
            "contracts/interfaces/IDelegateApprovals.sol"
        ],
        "contracts": {
            "Exchanger": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "MixinResolver"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 73
                    },
                    {
                        "name": "systemStatus",
                        "signature": "systemStatus()",
                        "returns": "(contract ISystemStatus)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 79
                    },
                    {
                        "name": "exchangeState",
                        "signature": "exchangeState()",
                        "returns": "(contract IExchangeState)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 83
                    },
                    {
                        "name": "exchangeRates",
                        "signature": "exchangeRates()",
                        "returns": "(contract IExchangeRates)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 87
                    },
                    {
                        "name": "synthetix",
                        "signature": "synthetix()",
                        "returns": "(contract ISynthetix)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 91
                    },
                    {
                        "name": "feePool",
                        "signature": "feePool()",
                        "returns": "(contract IFeePool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 95
                    },
                    {
                        "name": "delegateApprovals",
                        "signature": "delegateApprovals()",
                        "returns": "(contract IDelegateApprovals)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 99
                    },
                    {
                        "name": "maxSecsLeftInWaitingPeriod",
                        "signature": "maxSecsLeftInWaitingPeriod(address account, bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 103
                    },
                    {
                        "name": "feeRateForExchange",
                        "signature": "feeRateForExchange(bytes32 , bytes32 )",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 108
                    },
                    {
                        "name": "settlementOwing",
                        "signature": "settlementOwing(address account, bytes32 currencyKey)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 118
                    },
                    {
                        "name": "setWaitingPeriodSecs",
                        "signature": "setWaitingPeriodSecs(uint256 _waitingPeriodSecs)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 168
                    },
                    {
                        "name": "calculateAmountAfterSettlement",
                        "signature": "calculateAmountAfterSettlement(address from, bytes32 currencyKey, uint256 amount, uint256 refunded)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 172
                    },
                    {
                        "name": "exchange",
                        "signature": "exchange(address from, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, address destinationAddress)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "onlySynthetixorSynth"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 195
                    },
                    {
                        "name": "exchangeOnBehalf",
                        "signature": "exchangeOnBehalf(address exchangeForAddress, address from, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "onlySynthetixorSynth"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 212,
                                "name": "require(..., Not approved to act on behalf)"
                            }
                        ],
                        "lineNumber": 205
                    },
                    {
                        "name": "_exchange",
                        "signature": "_exchange(address from, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, address destinationAddress)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 235,
                                "name": "require(..., Can't be same synth)"
                            },
                            {
                                "lineNumber": 236,
                                "name": "require(..., Zero amount)"
                            }
                        ],
                        "lineNumber": 222
                    },
                    {
                        "name": "settle",
                        "signature": "settle(address from, bytes32 currencyKey)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 304
                    },
                    {
                        "name": "remitFee",
                        "signature": "remitFee(contract IExchangeRates _exRates, contract ISynthetix _synthetix, uint256 fee, bytes32 currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 323
                    },
                    {
                        "name": "_internalSettle",
                        "signature": "_internalSettle(address from, bytes32 currencyKey)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 344,
                                "name": "require(..., Cannot settle during waiting period)"
                            }
                        ],
                        "lineNumber": 336
                    },
                    {
                        "name": "reclaim",
                        "signature": "reclaim(address from, bytes32 currencyKey, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 362
                    },
                    {
                        "name": "refund",
                        "signature": "refund(address from, bytes32 currencyKey, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 372
                    },
                    {
                        "name": "secsLeftInWaitingPeriodForExchange",
                        "signature": "secsLeftInWaitingPeriodForExchange(uint256 timestamp)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 382
                    },
                    {
                        "name": "calculateExchangeAmountMinusFees",
                        "signature": "calculateExchangeAmountMinusFees(bytes32 sourceCurrencyKey, bytes32 destinationCurrencyKey, uint256 destinationAmount)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 390
                    },
                    {
                        "name": "appendExchange",
                        "signature": "appendExchange(address account, bytes32 src, uint256 amount, bytes32 dest, uint256 amountReceived)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 406
                    },
                    {
                        "name": "getRoundIdsAtPeriodEnd",
                        "signature": "getRoundIdsAtPeriodEnd(address account, bytes32 currencyKey, uint256 index)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 430
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "sUSD",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 51,
                        "visibility": "private"
                    },
                    {
                        "name": "waitingPeriodSecs",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 53,
                        "visibility": "public"
                    },
                    {
                        "name": "CONTRACT_SYSTEMSTATUS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 57,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXCHANGESTATE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 58,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXRATES",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 59,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHETIX",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 60,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_FEEPOOL",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 61,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_DELEGATEAPPROVALS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 62,
                        "visibility": "private"
                    },
                    {
                        "name": "addressesToCache",
                        "constant": false,
                        "type": "bytes32[24]",
                        "lineNumber": 64,
                        "visibility": "private"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlySynthetixorSynth",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 445
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned",
                    "MixinResolver",
                    "IExchanger"
                ]
            }
        },
        "interfaces": {
            "ISynthetixInternal": {
                "functions": [
                    {
                        "name": "emitSynthExchange",
                        "signature": "emitSynthExchange(address account, bytes32 fromCurrencyKey, uint256 fromAmount, bytes32 toCurrencyKey, uint256 toAmount, address toAddress)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 23
                    },
                    {
                        "name": "emitExchangeReclaim",
                        "signature": "emitExchangeReclaim(address account, bytes32 currencyKey, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 32
                    },
                    {
                        "name": "emitExchangeRebate",
                        "signature": "emitExchangeRebate(address account, bytes32 currencyKey, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 38
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/IExchanger.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IExchanger": {
                "functions": [
                    {
                        "name": "calculateAmountAfterSettlement",
                        "signature": "calculateAmountAfterSettlement(address from, bytes32 currencyKey, uint256 amount, uint256 refunded)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "feeRateForExchange",
                        "signature": "feeRateForExchange(bytes32 sourceCurrencyKey, bytes32 destinationCurrencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 13
                    },
                    {
                        "name": "maxSecsLeftInWaitingPeriod",
                        "signature": "maxSecsLeftInWaitingPeriod(address account, bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 15
                    },
                    {
                        "name": "settlementOwing",
                        "signature": "settlementOwing(address account, bytes32 currencyKey)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 17
                    },
                    {
                        "name": "exchange",
                        "signature": "exchange(address from, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, address destinationAddress)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 27
                    },
                    {
                        "name": "exchangeOnBehalf",
                        "signature": "exchangeOnBehalf(address exchangeForAddress, address from, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 35
                    },
                    {
                        "name": "settle",
                        "signature": "settle(address from, bytes32 currencyKey)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 43
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/IExchangeState.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IExchangeState": {
                "functions": [
                    {
                        "name": "getLengthOfEntries",
                        "signature": "getLengthOfEntries(address account, bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "getEntryAt",
                        "signature": "getEntryAt(address account, bytes32 currencyKey, uint256 index)",
                        "returns": "(bytes32, uint256, bytes32, uint256, uint256, uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "getMaxTimestamp",
                        "signature": "getMaxTimestamp(address account, bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 26
                    },
                    {
                        "name": "appendExchangeEntry",
                        "signature": "appendExchangeEntry(address account, bytes32 src, uint256 amount, bytes32 dest, uint256 amountReceived, uint256 exchangeFeeRate, uint256 timestamp, uint256 roundIdForSrc, uint256 roundIdForDest)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 29
                    },
                    {
                        "name": "removeEntries",
                        "signature": "removeEntries(address account, bytes32 currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 41
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/ExchangeRates.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/SelfDestructible.sol",
            "contracts/interfaces/IExchangeRates.sol",
            "contracts/SafeDecimalMath.sol",
            "@chainlink/contracts-0.0.3/src/v0.5/dev/AggregatorInterface.sol"
        ],
        "contracts": {
            "ExchangeRates": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _oracle, bytes32[] _currencyKeys, uint256[] _newRates)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "SelfDestructible"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 65,
                                "name": "require(..., Currency key length and rate length must match.)"
                            }
                        ],
                        "lineNumber": 59
                    },
                    {
                        "name": "setOracle",
                        "signature": "setOracle(address _oracle)",
                        "returns": "()",
                        "events": [
                            "OracleUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 77
                    },
                    {
                        "name": "setRateStalePeriod",
                        "signature": "setRateStalePeriod(uint256 _time)",
                        "returns": "()",
                        "events": [
                            "RateStalePeriodUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 82
                    },
                    {
                        "name": "updateRates",
                        "signature": "updateRates(bytes32[] currencyKeys, uint256[] newRates, uint256 timeSent)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "onlyOracle"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 97
                    },
                    {
                        "name": "deleteRate",
                        "signature": "deleteRate(bytes32 currencyKey)",
                        "returns": "()",
                        "events": [
                            "RateDeleted"
                        ],
                        "modifiers": [
                            "onlyOracle"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 110,
                                "name": "require(..., Rate is zero)"
                            }
                        ],
                        "lineNumber": 109
                    },
                    {
                        "name": "setInversePricing",
                        "signature": "setInversePricing(bytes32 currencyKey, uint256 entryPoint, uint256 upperLimit, uint256 lowerLimit, bool freeze, bool freezeAtUpperLimit)",
                        "returns": "()",
                        "events": [
                            "InversePriceConfigured"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 143,
                                "name": "require(..., entryPoint must be above 0)"
                            },
                            {
                                "lineNumber": 144,
                                "name": "require(..., lowerLimit must be above 0)"
                            },
                            {
                                "lineNumber": 145,
                                "name": "require(..., upperLimit must be above the entryPoint)"
                            },
                            {
                                "lineNumber": 146,
                                "name": "require(..., upperLimit must be less than double entryPoint)"
                            },
                            {
                                "lineNumber": 147,
                                "name": "require(..., lowerLimit must be below the entryPoint)"
                            }
                        ],
                        "lineNumber": 135
                    },
                    {
                        "name": "removeInversePricing",
                        "signature": "removeInversePricing(bytes32 currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 175,
                                "name": "require(..., No inverted price exists)"
                            }
                        ],
                        "lineNumber": 174
                    },
                    {
                        "name": "addAggregator",
                        "signature": "addAggregator(bytes32 currencyKey, address aggregatorAddress)",
                        "returns": "()",
                        "events": [
                            "AggregatorAdded"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 196,
                                "name": "require(..., Given Aggregator is invalid)"
                            }
                        ],
                        "lineNumber": 194
                    },
                    {
                        "name": "removeAggregator",
                        "signature": "removeAggregator(bytes32 currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 210,
                                "name": "require(..., No aggregator exists for key)"
                            }
                        ],
                        "lineNumber": 208
                    },
                    {
                        "name": "getLastRoundIdBeforeElapsedSecs",
                        "signature": "getLastRoundIdBeforeElapsedSecs(bytes32 currencyKey, uint256 startingRoundId, uint256 startingTimestamp, uint256 timediff)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 220
                    },
                    {
                        "name": "getCurrentRoundId",
                        "signature": "getCurrentRoundId(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 239
                    },
                    {
                        "name": "effectiveValueAtRound",
                        "signature": "effectiveValueAtRound(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey, uint256 roundIdForSrc, uint256 roundIdForDest)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "rateNotStale",
                            "rateNotStale"
                        ],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 248
                    },
                    {
                        "name": "rateAndTimestampAtRound",
                        "signature": "rateAndTimestampAtRound(bytes32 currencyKey, uint256 roundId)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 264
                    },
                    {
                        "name": "lastRateUpdateTimes",
                        "signature": "lastRateUpdateTimes(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 273
                    },
                    {
                        "name": "lastRateUpdateTimesForCurrencies",
                        "signature": "lastRateUpdateTimesForCurrencies(bytes32[] currencyKeys)",
                        "returns": "(uint256[])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 280
                    },
                    {
                        "name": "effectiveValue",
                        "signature": "effectiveValue(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "rateNotStale",
                            "rateNotStale"
                        ],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 296
                    },
                    {
                        "name": "rateForCurrency",
                        "signature": "rateForCurrency(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 314
                    },
                    {
                        "name": "ratesForCurrencies",
                        "signature": "ratesForCurrencies(bytes32[] currencyKeys)",
                        "returns": "(uint256[])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 321
                    },
                    {
                        "name": "ratesAndStaleForCurrencies",
                        "signature": "ratesAndStaleForCurrencies(bytes32[] currencyKeys)",
                        "returns": "(uint256[], bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 334
                    },
                    {
                        "name": "rateIsStale",
                        "signature": "rateIsStale(bytes32 currencyKey)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 353
                    },
                    {
                        "name": "rateIsFrozen",
                        "signature": "rateIsFrozen(bytes32 currencyKey)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 363
                    },
                    {
                        "name": "anyRateIsStale",
                        "signature": "anyRateIsStale(bytes32[] currencyKeys)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 370
                    },
                    {
                        "name": "_setRate",
                        "signature": "_setRate(bytes32 currencyKey, uint256 rate, uint256 time)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 387
                    },
                    {
                        "name": "internalUpdateRates",
                        "signature": "internalUpdateRates(bytes32[] currencyKeys, uint256[] newRates, uint256 timeSent)",
                        "returns": "(bool)",
                        "events": [
                            "RatesUpdated"
                        ],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 414,
                                "name": "require(..., Currency key array length must match rates array length.)"
                            },
                            {
                                "lineNumber": 415,
                                "name": "require(..., Time is too far into the future)"
                            }
                        ],
                        "lineNumber": 409
                    },
                    {
                        "name": "rateOrInverted",
                        "signature": "rateOrInverted(bytes32 currencyKey, uint256 rate)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 468
                    },
                    {
                        "name": "getRateAndUpdatedTime",
                        "signature": "getRateAndUpdatedTime(bytes32 currencyKey)",
                        "returns": "(struct ExchangeRates.RateAndUpdatedTime)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 506
                    },
                    {
                        "name": "removeFromArray",
                        "signature": "removeFromArray(bytes32 entry, bytes32[] array)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 524
                    },
                    {
                        "name": "getRateAndTimestampAtRound",
                        "signature": "getRateAndTimestampAtRound(bytes32 currencyKey, uint256 roundId)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 543
                    },
                    {
                        "name": "getRate",
                        "signature": "getRate(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 553
                    }
                ],
                "events": [
                    {
                        "name": "OracleUpdated",
                        "parameters": "(address newOracle)",
                        "lineNumber": 571
                    },
                    {
                        "name": "RateStalePeriodUpdated",
                        "parameters": "(uint256 rateStalePeriod)",
                        "lineNumber": 572
                    },
                    {
                        "name": "RatesUpdated",
                        "parameters": "(bytes32[] currencyKeys, uint256[] newRates)",
                        "lineNumber": 573
                    },
                    {
                        "name": "RateDeleted",
                        "parameters": "(bytes32 currencyKey)",
                        "lineNumber": 574
                    },
                    {
                        "name": "InversePriceConfigured",
                        "parameters": "(bytes32 currencyKey, uint256 entryPoint, uint256 upperLimit, uint256 lowerLimit)",
                        "lineNumber": 575
                    },
                    {
                        "name": "InversePriceFrozen",
                        "parameters": "(bytes32 currencyKey)",
                        "lineNumber": 576
                    },
                    {
                        "name": "AggregatorAdded",
                        "parameters": "(bytes32 currencyKey, address aggregator)",
                        "lineNumber": 577
                    },
                    {
                        "name": "AggregatorRemoved",
                        "parameters": "(bytes32 currencyKey, address aggregator)",
                        "lineNumber": 578
                    }
                ],
                "variables": [
                    {
                        "name": "_rates",
                        "constant": false,
                        "type": "mapping(bytes32 => mapping(uint256 => struct ExchangeRates.RateAndUpdatedTime))",
                        "lineNumber": 27,
                        "visibility": "private"
                    },
                    {
                        "name": "oracle",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 30,
                        "visibility": "public"
                    },
                    {
                        "name": "aggregators",
                        "constant": false,
                        "type": "mapping(bytes32 => contract AggregatorInterface)",
                        "lineNumber": 33,
                        "visibility": "public"
                    },
                    {
                        "name": "aggregatorKeys",
                        "constant": false,
                        "type": "bytes32[]",
                        "lineNumber": 36,
                        "visibility": "public"
                    },
                    {
                        "name": "ORACLE_FUTURE_LIMIT",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 39,
                        "visibility": "private"
                    },
                    {
                        "name": "rateStalePeriod",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 42,
                        "visibility": "public"
                    },
                    {
                        "name": "inversePricing",
                        "constant": false,
                        "type": "mapping(bytes32 => struct ExchangeRates.InversePricing)",
                        "lineNumber": 51,
                        "visibility": "public"
                    },
                    {
                        "name": "invertedKeys",
                        "constant": false,
                        "type": "bytes32[]",
                        "lineNumber": 52,
                        "visibility": "public"
                    },
                    {
                        "name": "currentRoundForRate",
                        "constant": false,
                        "type": "mapping(bytes32 => uint256)",
                        "lineNumber": 54,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "rateNotStale",
                        "parameters": "(bytes32 currencyKey)",
                        "visibility": "internal",
                        "lineNumber": 559
                    },
                    {
                        "name": "onlyOracle",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 564
                    }
                ],
                "structs": [
                    {
                        "name": "RateAndUpdatedTime",
                        "members": [
                            {
                                "name": "rate",
                                "type": "uint216"
                            },
                            {
                                "name": "time",
                                "type": "uint40"
                            }
                        ],
                        "lineNumber": 21
                    },
                    {
                        "name": "InversePricing",
                        "members": [
                            {
                                "name": "entryPoint",
                                "type": "uint256"
                            },
                            {
                                "name": "upperLimit",
                                "type": "uint256"
                            },
                            {
                                "name": "lowerLimit",
                                "type": "uint256"
                            },
                            {
                                "name": "frozen",
                                "type": "bool"
                            }
                        ],
                        "lineNumber": 45
                    }
                ],
                "inherits": [
                    "Owned",
                    "SelfDestructible",
                    "IExchangeRates"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "@chainlink/contracts-0.0.3/src/v0.5/dev/AggregatorInterface.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "AggregatorInterface": {
                "functions": [
                    {
                        "name": "latestAnswer",
                        "signature": "latestAnswer()",
                        "returns": "(int256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 4
                    },
                    {
                        "name": "latestTimestamp",
                        "signature": "latestTimestamp()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 5
                    },
                    {
                        "name": "latestRound",
                        "signature": "latestRound()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "getAnswer",
                        "signature": "getAnswer(uint256 roundId)",
                        "returns": "(int256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 7
                    },
                    {
                        "name": "getTimestamp",
                        "signature": "getTimestamp(uint256 roundId)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    }
                ],
                "events": [
                    {
                        "name": "AnswerUpdated",
                        "parameters": "(int256 current, uint256 roundId, uint256 timestamp)",
                        "lineNumber": 10
                    },
                    {
                        "name": "NewRound",
                        "parameters": "(uint256 roundId, address startedBy)",
                        "lineNumber": 11
                    }
                ],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/ExchangeState.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/State.sol",
            "contracts/interfaces/IExchangeState.sol"
        ],
        "contracts": {
            "ExchangeState": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _associatedContract)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "State"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 26
                    },
                    {
                        "name": "setMaxEntriesInQueue",
                        "signature": "setMaxEntriesInQueue(uint256 _maxEntriesInQueue)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 30
                    },
                    {
                        "name": "appendExchangeEntry",
                        "signature": "appendExchangeEntry(address account, bytes32 src, uint256 amount, bytes32 dest, uint256 amountReceived, uint256 exchangeFeeRate, uint256 timestamp, uint256 roundIdForSrc, uint256 roundIdForDest)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 47,
                                "name": "require(..., Max queue length reached)"
                            }
                        ],
                        "lineNumber": 36
                    },
                    {
                        "name": "removeEntries",
                        "signature": "removeEntries(address account, bytes32 currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 63
                    },
                    {
                        "name": "getLengthOfEntries",
                        "signature": "getLengthOfEntries(address account, bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 69
                    },
                    {
                        "name": "getEntryAt",
                        "signature": "getEntryAt(address account, bytes32 currencyKey, uint256 index)",
                        "returns": "(bytes32, uint256, bytes32, uint256, uint256, uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 73
                    },
                    {
                        "name": "getMaxTimestamp",
                        "signature": "getMaxTimestamp(address account, bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 104
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "exchanges",
                        "constant": false,
                        "type": "mapping(address => mapping(bytes32 => struct ExchangeState.ExchangeEntry[]))",
                        "lineNumber": 22,
                        "visibility": "public"
                    },
                    {
                        "name": "maxEntriesInQueue",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 24,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [
                    {
                        "name": "ExchangeEntry",
                        "members": [
                            {
                                "name": "src",
                                "type": "bytes32"
                            },
                            {
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "name": "dest",
                                "type": "bytes32"
                            },
                            {
                                "name": "amountReceived",
                                "type": "uint256"
                            },
                            {
                                "name": "exchangeFeeRate",
                                "type": "uint256"
                            },
                            {
                                "name": "timestamp",
                                "type": "uint256"
                            },
                            {
                                "name": "roundIdForSrc",
                                "type": "uint256"
                            },
                            {
                                "name": "roundIdForDest",
                                "type": "uint256"
                            }
                        ],
                        "lineNumber": 11
                    }
                ],
                "inherits": [
                    "Owned",
                    "State",
                    "IExchangeState"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/ExternStateToken.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/SelfDestructible.sol",
            "contracts/Proxyable.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/TokenState.sol"
        ],
        "contracts": {
            "ExternStateToken": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address payable _proxy, contract TokenState _tokenState, string _name, string _symbol, uint256 _totalSupply, uint8 _decimals, address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "SelfDestructible",
                            "Proxyable"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 31
                    },
                    {
                        "name": "allowance",
                        "signature": "allowance(address owner, address spender)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 55
                    },
                    {
                        "name": "balanceOf",
                        "signature": "balanceOf(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 62
                    },
                    {
                        "name": "setTokenState",
                        "signature": "setTokenState(contract TokenState _tokenState)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 73
                    },
                    {
                        "name": "_internalTransfer",
                        "signature": "_internalTransfer(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 84,
                                "name": "require(..., Cannot transfer to this address)"
                            }
                        ],
                        "lineNumber": 78
                    },
                    {
                        "name": "_transferByProxy",
                        "signature": "_transferByProxy(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 100
                    },
                    {
                        "name": "_transferFromByProxy",
                        "signature": "_transferFromByProxy(address sender, address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 112
                    },
                    {
                        "name": "approve",
                        "signature": "approve(address spender, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 126
                    },
                    {
                        "name": "addressToBytes32",
                        "signature": "addressToBytes32(address input)",
                        "returns": "(bytes32)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 135
                    },
                    {
                        "name": "emitTransfer",
                        "signature": "emitTransfer(address from, address to, uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 142
                    },
                    {
                        "name": "emitApproval",
                        "signature": "emitApproval(address owner, address spender, uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 153
                    },
                    {
                        "name": "emitTokenStateUpdated",
                        "signature": "emitTokenStateUpdated(address newTokenState)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 164
                    }
                ],
                "events": [
                    {
                        "name": "Transfer",
                        "parameters": "(address from, address to, uint256 value)",
                        "lineNumber": 139
                    },
                    {
                        "name": "Approval",
                        "parameters": "(address owner, address spender, uint256 value)",
                        "lineNumber": 150
                    },
                    {
                        "name": "TokenStateUpdated",
                        "parameters": "(address newTokenState)",
                        "lineNumber": 161
                    }
                ],
                "variables": [
                    {
                        "name": "tokenState",
                        "constant": false,
                        "type": "contract TokenState",
                        "lineNumber": 23,
                        "visibility": "public"
                    },
                    {
                        "name": "name",
                        "constant": false,
                        "type": "string",
                        "lineNumber": 26,
                        "visibility": "public"
                    },
                    {
                        "name": "symbol",
                        "constant": false,
                        "type": "string",
                        "lineNumber": 27,
                        "visibility": "public"
                    },
                    {
                        "name": "totalSupply",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 28,
                        "visibility": "public"
                    },
                    {
                        "name": "decimals",
                        "constant": false,
                        "type": "uint8",
                        "lineNumber": 29,
                        "visibility": "public"
                    },
                    {
                        "name": "TRANSFER_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 140,
                        "visibility": "internal"
                    },
                    {
                        "name": "APPROVAL_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 151,
                        "visibility": "internal"
                    },
                    {
                        "name": "TOKENSTATEUPDATED_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 162,
                        "visibility": "internal"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "SelfDestructible",
                    "Proxyable"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/Proxyable.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/Proxy.sol"
        ],
        "contracts": {
            "Proxyable": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address payable _proxy)",
                        "returns": "()",
                        "events": [
                            "ProxyUpdated"
                        ],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 25,
                                "name": "require(..., Owner must be set)"
                            }
                        ],
                        "lineNumber": 23
                    },
                    {
                        "name": "setProxy",
                        "signature": "setProxy(address payable _proxy)",
                        "returns": "()",
                        "events": [
                            "ProxyUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 31
                    },
                    {
                        "name": "setIntegrationProxy",
                        "signature": "setIntegrationProxy(address payable _integrationProxy)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 36
                    },
                    {
                        "name": "setMessageSender",
                        "signature": "setMessageSender(address sender)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 40
                    }
                ],
                "events": [
                    {
                        "name": "ProxyUpdated",
                        "parameters": "(address proxyAddress)",
                        "lineNumber": 64
                    }
                ],
                "variables": [
                    {
                        "name": "proxy",
                        "constant": false,
                        "type": "contract Proxy",
                        "lineNumber": 15,
                        "visibility": "public"
                    },
                    {
                        "name": "integrationProxy",
                        "constant": false,
                        "type": "contract Proxy",
                        "lineNumber": 16,
                        "visibility": "public"
                    },
                    {
                        "name": "messageSender",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 21,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyProxy",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 44
                    },
                    {
                        "name": "optionalProxy",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 49
                    },
                    {
                        "name": "optionalProxy_onlyOwner",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 56
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/Proxy.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/Proxyable.sol"
        ],
        "contracts": {
            "Proxy": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 15
                    },
                    {
                        "name": "setTarget",
                        "signature": "setTarget(contract Proxyable _target)",
                        "returns": "()",
                        "events": [
                            "TargetUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 17
                    },
                    {
                        "name": "setUseDELEGATECALL",
                        "signature": "setUseDELEGATECALL(bool value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 22
                    },
                    {
                        "name": "_emit",
                        "signature": "_emit(bytes callData, uint256 numTopics, bytes32 topic1, bytes32 topic2, bytes32 topic3, bytes32 topic4)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyTarget"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 26
                    },
                    {
                        "name": "fallback",
                        "signature": "()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "payable",
                        "requires": [],
                        "lineNumber": 62
                    }
                ],
                "events": [
                    {
                        "name": "TargetUpdated",
                        "parameters": "(contract Proxyable newTarget)",
                        "lineNumber": 104
                    }
                ],
                "variables": [
                    {
                        "name": "target",
                        "constant": false,
                        "type": "contract Proxyable",
                        "lineNumber": 12,
                        "visibility": "public"
                    },
                    {
                        "name": "useDELEGATECALL",
                        "constant": false,
                        "type": "bool",
                        "lineNumber": 13,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyTarget",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 99
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/TokenState.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/State.sol"
        ],
        "contracts": {
            "TokenState": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _associatedContract)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "State"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 14
                    },
                    {
                        "name": "setAllowance",
                        "signature": "setAllowance(address tokenOwner, address spender, uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 26
                    },
                    {
                        "name": "setBalanceOf",
                        "signature": "setBalanceOf(address account, uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 40
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "balanceOf",
                        "constant": false,
                        "type": "mapping(address => uint256)",
                        "lineNumber": 11,
                        "visibility": "public"
                    },
                    {
                        "name": "allowance",
                        "constant": false,
                        "type": "mapping(address => mapping(address => uint256))",
                        "lineNumber": 12,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "State"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/FeePool.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/Proxyable.sol",
            "contracts/SelfDestructible.sol",
            "contracts/LimitedSetup.sol",
            "contracts/MixinResolver.sol",
            "contracts/interfaces/IFeePool.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/interfaces/IERC20.sol",
            "contracts/interfaces/ISystemStatus.sol",
            "contracts/interfaces/IRewardEscrow.sol",
            "contracts/interfaces/IExchangeRates.sol",
            "contracts/interfaces/ISynthetixState.sol",
            "contracts/interfaces/ISynthetix.sol",
            "contracts/interfaces/IExchanger.sol",
            "contracts/interfaces/IIssuer.sol",
            "contracts/interfaces/IRewardsDistribution.sol",
            "contracts/interfaces/IDelegateApprovals.sol",
            "contracts/interfaces/ISynth.sol",
            "contracts/FeePoolState.sol",
            "contracts/FeePoolEternalStorage.sol"
        ],
        "contracts": {
            "FeePool": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address payable _proxy, address _owner, uint256 _exchangeFeeRate, address _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "SelfDestructible",
                            "Proxyable",
                            "LimitedSetup",
                            "MixinResolver"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 124,
                                "name": "require(..., Exchange fee rate max exceeded)"
                            }
                        ],
                        "lineNumber": 110
                    },
                    {
                        "name": "systemStatus",
                        "signature": "systemStatus()",
                        "returns": "(contract ISystemStatus)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 135
                    },
                    {
                        "name": "synthetix",
                        "signature": "synthetix()",
                        "returns": "(contract ISynthetix)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 139
                    },
                    {
                        "name": "feePoolState",
                        "signature": "feePoolState()",
                        "returns": "(contract FeePoolState)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 143
                    },
                    {
                        "name": "feePoolEternalStorage",
                        "signature": "feePoolEternalStorage()",
                        "returns": "(contract FeePoolEternalStorage)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 147
                    },
                    {
                        "name": "exchanger",
                        "signature": "exchanger()",
                        "returns": "(contract IExchanger)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 154
                    },
                    {
                        "name": "issuer",
                        "signature": "issuer()",
                        "returns": "(contract IIssuer)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 158
                    },
                    {
                        "name": "synthetixState",
                        "signature": "synthetixState()",
                        "returns": "(contract ISynthetixState)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 162
                    },
                    {
                        "name": "rewardEscrow",
                        "signature": "rewardEscrow()",
                        "returns": "(contract IRewardEscrow)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 166
                    },
                    {
                        "name": "delegateApprovals",
                        "signature": "delegateApprovals()",
                        "returns": "(contract IDelegateApprovals)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 170
                    },
                    {
                        "name": "rewardsDistribution",
                        "signature": "rewardsDistribution()",
                        "returns": "(contract IRewardsDistribution)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 174
                    },
                    {
                        "name": "recentFeePeriods",
                        "signature": "recentFeePeriods(uint256 index)",
                        "returns": "(uint64, uint64, uint64, uint256, uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 179
                    },
                    {
                        "name": "_recentFeePeriodsStorage",
                        "signature": "_recentFeePeriodsStorage(uint256 index)",
                        "returns": "(struct FeePool.FeePeriod)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 204
                    },
                    {
                        "name": "appendAccountIssuanceRecord",
                        "signature": "appendAccountIssuanceRecord(address account, uint256 debtRatio, uint256 debtEntryIndex)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyIssuer"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 218
                    },
                    {
                        "name": "setExchangeFeeRate",
                        "signature": "setExchangeFeeRate(uint256 _exchangeFeeRate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 238,
                                "name": "require(..., rate < MAX_EXCHANGE_FEE_RATE)"
                            }
                        ],
                        "lineNumber": 237
                    },
                    {
                        "name": "setFeePeriodDuration",
                        "signature": "setFeePeriodDuration(uint256 _feePeriodDuration)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 246,
                                "name": "require(..., value < MIN_FEE_PERIOD_DURATION)"
                            },
                            {
                                "lineNumber": 247,
                                "name": "require(..., value > MAX_FEE_PERIOD_DURATION)"
                            }
                        ],
                        "lineNumber": 245
                    },
                    {
                        "name": "setTargetThreshold",
                        "signature": "setTargetThreshold(uint256 _percent)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 255,
                                "name": "require(..., Threshold should be positive)"
                            },
                            {
                                "lineNumber": 256,
                                "name": "require(..., Threshold too high)"
                            }
                        ],
                        "lineNumber": 254
                    },
                    {
                        "name": "recordFeePaid",
                        "signature": "recordFeePaid(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyExchangerOrSynth"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 264
                    },
                    {
                        "name": "setRewardsToDistribute",
                        "signature": "setRewardsToDistribute(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 274,
                                "name": "require(..., Caller is not rewardsAuthority)"
                            }
                        ],
                        "lineNumber": 272
                    },
                    {
                        "name": "closeCurrentFeePeriod",
                        "signature": "closeCurrentFeePeriod()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 283,
                                "name": "require(..., Too early to close fee period)"
                            }
                        ],
                        "lineNumber": 282
                    },
                    {
                        "name": "claimFees",
                        "signature": "claimFees()",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 323
                    },
                    {
                        "name": "claimOnBehalf",
                        "signature": "claimOnBehalf(address claimingForAddress)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 334,
                                "name": "require(..., Not approved to claim on behalf)"
                            }
                        ],
                        "lineNumber": 333
                    },
                    {
                        "name": "_claimFees",
                        "signature": "_claimFees(address claimingAddress)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 349,
                                "name": "require(..., C-Ratio below penalty threshold)"
                            },
                            {
                                "lineNumber": 354,
                                "name": "require(..., No fees or rewards available for period, or fees already claimed)"
                            }
                        ],
                        "lineNumber": 339
                    },
                    {
                        "name": "importFeePeriod",
                        "signature": "importFeePeriod(uint256 feePeriodIndex, uint256 feePeriodId, uint256 startingDebtIndex, uint256 startTime, uint256 feesToDistribute, uint256 feesClaimed, uint256 rewardsToDistribute, uint256 rewardsClaimed)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner",
                            "onlyDuringSetup"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 396,
                                "name": "require(..., Cannot import bad data)"
                            }
                        ],
                        "lineNumber": 386
                    },
                    {
                        "name": "appendVestingEntry",
                        "signature": "appendVestingEntry(address account, uint256 quantity)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 414
                    },
                    {
                        "name": "_recordFeePayment",
                        "signature": "_recordFeePayment(uint256 sUSDAmount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 426
                    },
                    {
                        "name": "_recordRewardPayment",
                        "signature": "_recordRewardPayment(uint256 snxAmount)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 464
                    },
                    {
                        "name": "_payFees",
                        "signature": "_payFees(address account, uint256 sUSDAmount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "notFeeAddress"
                        ],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 507,
                                "name": "require(..., Can't send fees to this address)"
                            }
                        ],
                        "lineNumber": 505
                    },
                    {
                        "name": "_payRewards",
                        "signature": "_payRewards(address account, uint256 snxAmount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "notFeeAddress"
                        ],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 535,
                                "name": "require(..., Account can't be 0)"
                            },
                            {
                                "lineNumber": 536,
                                "name": "require(..., Can't send rewards to fee pool)"
                            },
                            {
                                "lineNumber": 537,
                                "name": "require(..., Can't send rewards to proxy)"
                            },
                            {
                                "lineNumber": 538,
                                "name": "require(..., Can't send rewards to synthetix)"
                            }
                        ],
                        "lineNumber": 534
                    },
                    {
                        "name": "exchangeFeeIncurred",
                        "signature": "exchangeFeeIncurred(uint256 value)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 549
                    },
                    {
                        "name": "amountReceivedFromExchange",
                        "signature": "amountReceivedFromExchange(uint256 value)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 566
                    },
                    {
                        "name": "totalFeesAvailable",
                        "signature": "totalFeesAvailable()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 573
                    },
                    {
                        "name": "totalRewardsAvailable",
                        "signature": "totalRewardsAvailable()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 588
                    },
                    {
                        "name": "feesAvailable",
                        "signature": "feesAvailable(address account)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 604
                    },
                    {
                        "name": "isFeesClaimable",
                        "signature": "isFeesClaimable(address account)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 626
                    },
                    {
                        "name": "feesByPeriod",
                        "signature": "feesByPeriod(address account)",
                        "returns": "(uint256[2][2])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 653
                    },
                    {
                        "name": "_feesAndRewardsFromPeriod",
                        "signature": "_feesAndRewardsFromPeriod(uint256 period, uint256 ownershipPercentage, uint256 debtEntryIndex)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 715
                    },
                    {
                        "name": "_effectiveDebtRatioForPeriod",
                        "signature": "_effectiveDebtRatioForPeriod(uint256 closingDebtIndex, uint256 ownershipPercentage, uint256 debtEntryIndex)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 742
                    },
                    {
                        "name": "effectiveDebtRatioForPeriod",
                        "signature": "effectiveDebtRatioForPeriod(address account, uint256 period)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 759,
                                "name": "require(..., Current period is not closed yet)"
                            },
                            {
                                "lineNumber": 760,
                                "name": "require(..., Exceeds the FEE_PERIOD_LENGTH)"
                            }
                        ],
                        "lineNumber": 758
                    },
                    {
                        "name": "getLastFeeWithdrawal",
                        "signature": "getLastFeeWithdrawal(address _claimingAddress)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 780
                    },
                    {
                        "name": "getPenaltyThresholdRatio",
                        "signature": "getPenaltyThresholdRatio()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 787
                    },
                    {
                        "name": "_setLastFeeWithdrawal",
                        "signature": "_setLastFeeWithdrawal(address _claimingAddress, uint256 _feePeriodID)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 798
                    },
                    {
                        "name": "emitIssuanceDebtRatioEntry",
                        "signature": "emitIssuanceDebtRatioEntry(address account, uint256 debtRatio, uint256 debtEntryIndex, uint256 feePeriodStartingDebtIndex)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 836
                    },
                    {
                        "name": "emitExchangeFeeUpdated",
                        "signature": "emitExchangeFeeUpdated(uint256 newFeeRate)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 855
                    },
                    {
                        "name": "emitFeePeriodDurationUpdated",
                        "signature": "emitFeePeriodDurationUpdated(uint256 newFeePeriodDuration)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 862
                    },
                    {
                        "name": "emitFeePeriodClosed",
                        "signature": "emitFeePeriodClosed(uint256 feePeriodId)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 869
                    },
                    {
                        "name": "emitFeesClaimed",
                        "signature": "emitFeesClaimed(address account, uint256 sUSDAmount, uint256 snxRewards)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 876
                    }
                ],
                "events": [
                    {
                        "name": "IssuanceDebtRatioEntry",
                        "parameters": "(address account, uint256 debtRatio, uint256 debtEntryIndex, uint256 feePeriodStartingDebtIndex)",
                        "lineNumber": 826
                    },
                    {
                        "name": "ExchangeFeeUpdated",
                        "parameters": "(uint256 newFeeRate)",
                        "lineNumber": 852
                    },
                    {
                        "name": "FeePeriodDurationUpdated",
                        "parameters": "(uint256 newFeePeriodDuration)",
                        "lineNumber": 859
                    },
                    {
                        "name": "FeePeriodClosed",
                        "parameters": "(uint256 feePeriodId)",
                        "lineNumber": 866
                    },
                    {
                        "name": "FeesClaimed",
                        "parameters": "(address account, uint256 sUSDAmount, uint256 snxRewards)",
                        "lineNumber": 873
                    }
                ],
                "variables": [
                    {
                        "name": "exchangeFeeRate",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 36,
                        "visibility": "public"
                    },
                    {
                        "name": "MAX_EXCHANGE_FEE_RATE",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 39,
                        "visibility": "public"
                    },
                    {
                        "name": "FEE_ADDRESS",
                        "constant": true,
                        "type": "address",
                        "lineNumber": 42,
                        "visibility": "public"
                    },
                    {
                        "name": "sUSD",
                        "constant": false,
                        "type": "bytes32",
                        "lineNumber": 45,
                        "visibility": "private"
                    },
                    {
                        "name": "FEE_PERIOD_LENGTH",
                        "constant": true,
                        "type": "uint8",
                        "lineNumber": 63,
                        "visibility": "public"
                    },
                    {
                        "name": "_recentFeePeriods",
                        "constant": false,
                        "type": "struct FeePool.FeePeriod[2]",
                        "lineNumber": 65,
                        "visibility": "private"
                    },
                    {
                        "name": "_currentFeePeriod",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 66,
                        "visibility": "private"
                    },
                    {
                        "name": "feePeriodDuration",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 72,
                        "visibility": "public"
                    },
                    {
                        "name": "MIN_FEE_PERIOD_DURATION",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 74,
                        "visibility": "public"
                    },
                    {
                        "name": "MAX_FEE_PERIOD_DURATION",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 75,
                        "visibility": "public"
                    },
                    {
                        "name": "targetThreshold",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 78,
                        "visibility": "public"
                    },
                    {
                        "name": "CONTRACT_SYSTEMSTATUS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 82,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHETIX",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 83,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_FEEPOOLSTATE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 84,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_FEEPOOLETERNALSTORAGE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 85,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXCHANGER",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 86,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_ISSUER",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 87,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHETIXSTATE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 88,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_REWARDESCROW",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 89,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_DELEGATEAPPROVALS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 90,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_REWARDSDISTRIBUTION",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 91,
                        "visibility": "private"
                    },
                    {
                        "name": "addressesToCache",
                        "constant": false,
                        "type": "bytes32[24]",
                        "lineNumber": 93,
                        "visibility": "private"
                    },
                    {
                        "name": "LAST_FEE_WITHDRAWAL",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 108,
                        "visibility": "private"
                    },
                    {
                        "name": "ISSUANCEDEBTRATIOENTRY_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 832,
                        "visibility": "private"
                    },
                    {
                        "name": "EXCHANGEFEEUPDATED_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 853,
                        "visibility": "private"
                    },
                    {
                        "name": "FEEPERIODDURATIONUPDATED_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 860,
                        "visibility": "private"
                    },
                    {
                        "name": "FEEPERIODCLOSED_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 867,
                        "visibility": "private"
                    },
                    {
                        "name": "FEESCLAIMED_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 874,
                        "visibility": "private"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyExchangerOrSynth",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 806
                    },
                    {
                        "name": "onlyIssuer",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 814
                    },
                    {
                        "name": "notFeeAddress",
                        "parameters": "(address account)",
                        "visibility": "internal",
                        "lineNumber": 819
                    }
                ],
                "structs": [
                    {
                        "name": "FeePeriod",
                        "members": [
                            {
                                "name": "feePeriodId",
                                "type": "uint64"
                            },
                            {
                                "name": "startingDebtIndex",
                                "type": "uint64"
                            },
                            {
                                "name": "startTime",
                                "type": "uint64"
                            },
                            {
                                "name": "feesToDistribute",
                                "type": "uint256"
                            },
                            {
                                "name": "feesClaimed",
                                "type": "uint256"
                            },
                            {
                                "name": "rewardsToDistribute",
                                "type": "uint256"
                            },
                            {
                                "name": "rewardsClaimed",
                                "type": "uint256"
                            }
                        ],
                        "lineNumber": 48
                    }
                ],
                "inherits": [
                    "Owned",
                    "Proxyable",
                    "SelfDestructible",
                    "LimitedSetup",
                    "MixinResolver",
                    "IFeePool"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/LimitedSetup.sol": {
        "imports": [],
        "contracts": {
            "LimitedSetup": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(uint256 setupDuration)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 12
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "setupExpiryTime",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 6,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyDuringSetup",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 16
                    }
                ],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/interfaces/IRewardEscrow.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IRewardEscrow": {
                "functions": [
                    {
                        "name": "balanceOf",
                        "signature": "balanceOf(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "numVestingEntries",
                        "signature": "numVestingEntries(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "appendVestingEntry",
                        "signature": "appendVestingEntry(address account, uint256 quantity)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 11
                    },
                    {
                        "name": "vest",
                        "signature": "vest()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 13
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/ISynthetixState.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "ISynthetixState": {
                "functions": [
                    {
                        "name": "debtLedger",
                        "signature": "debtLedger(uint256 index)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "issuanceRatio",
                        "signature": "issuanceRatio()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "issuanceData",
                        "signature": "issuanceData(address account)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "debtLedgerLength",
                        "signature": "debtLedgerLength()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "hasIssued",
                        "signature": "hasIssued(address account)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 14
                    },
                    {
                        "name": "lastDebtLedgerEntry",
                        "signature": "lastDebtLedgerEntry()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 16
                    },
                    {
                        "name": "incrementTotalIssuerCount",
                        "signature": "incrementTotalIssuerCount()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 19
                    },
                    {
                        "name": "decrementTotalIssuerCount",
                        "signature": "decrementTotalIssuerCount()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 21
                    },
                    {
                        "name": "setCurrentIssuanceData",
                        "signature": "setCurrentIssuanceData(address account, uint256 initialDebtOwnership)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 23
                    },
                    {
                        "name": "appendDebtLedgerValue",
                        "signature": "appendDebtLedgerValue(uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 25
                    },
                    {
                        "name": "clearIssuanceData",
                        "signature": "clearIssuanceData(address account)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 27
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/IIssuer.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IIssuer": {
                "functions": [
                    {
                        "name": "canBurnSynths",
                        "signature": "canBurnSynths(address account)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    },
                    {
                        "name": "lastIssueEvent",
                        "signature": "lastIssueEvent(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "issueSynths",
                        "signature": "issueSynths(address from, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 11
                    },
                    {
                        "name": "issueSynthsOnBehalf",
                        "signature": "issueSynthsOnBehalf(address issueFor, address from, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 13
                    },
                    {
                        "name": "issueMaxSynths",
                        "signature": "issueMaxSynths(address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 19
                    },
                    {
                        "name": "issueMaxSynthsOnBehalf",
                        "signature": "issueMaxSynthsOnBehalf(address issueFor, address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 21
                    },
                    {
                        "name": "burnSynths",
                        "signature": "burnSynths(address from, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 23
                    },
                    {
                        "name": "burnSynthsOnBehalf",
                        "signature": "burnSynthsOnBehalf(address burnForAddress, address from, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 25
                    },
                    {
                        "name": "burnSynthsToTarget",
                        "signature": "burnSynthsToTarget(address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 31
                    },
                    {
                        "name": "burnSynthsToTargetOnBehalf",
                        "signature": "burnSynthsToTargetOnBehalf(address burnForAddress, address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 33
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/interfaces/IRewardsDistribution.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IRewardsDistribution": {
                "functions": [
                    {
                        "name": "distributeRewards",
                        "signature": "distributeRewards(uint256 amount)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 6
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/FeePoolState.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/SelfDestructible.sol",
            "contracts/LimitedSetup.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/interfaces/IFeePool.sol"
        ],
        "contracts": {
            "FeePoolState": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, contract IFeePool _feePool)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "SelfDestructible",
                            "LimitedSetup"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 35
                    },
                    {
                        "name": "setFeePool",
                        "signature": "setFeePool(contract IFeePool _feePool)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 46
                    },
                    {
                        "name": "getAccountsDebtEntry",
                        "signature": "getAccountsDebtEntry(address account, uint256 index)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 62,
                                "name": "require(..., index exceeds the FEE_PERIOD_LENGTH)"
                            }
                        ],
                        "lineNumber": 57
                    },
                    {
                        "name": "applicableIssuanceData",
                        "signature": "applicableIssuanceData(address account, uint256 closingDebtIndex)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 73
                    },
                    {
                        "name": "appendAccountIssuanceRecord",
                        "signature": "appendAccountIssuanceRecord(address account, uint256 debtRatio, uint256 debtEntryIndex, uint256 currentPeriodStartDebtIndex)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyFeePool"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 98
                    },
                    {
                        "name": "issuanceDataIndexOrder",
                        "signature": "issuanceDataIndexOrder(address account)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "private",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 118
                    },
                    {
                        "name": "importIssuerData",
                        "signature": "importIssuerData(address[] accounts, uint256[] ratios, uint256 periodToInsert, uint256 feePeriodCloseIndex)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner",
                            "onlyDuringSetup"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 143,
                                "name": "require(..., Length mismatch)"
                            }
                        ],
                        "lineNumber": 137
                    }
                ],
                "events": [
                    {
                        "name": "IssuanceDebtRatioEntry",
                        "parameters": "(address account, uint256 debtRatio, uint256 feePeriodCloseIndex)",
                        "lineNumber": 160
                    }
                ],
                "variables": [
                    {
                        "name": "FEE_PERIOD_LENGTH",
                        "constant": true,
                        "type": "uint8",
                        "lineNumber": 22,
                        "visibility": "public"
                    },
                    {
                        "name": "feePool",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 24,
                        "visibility": "public"
                    },
                    {
                        "name": "accountIssuanceLedger",
                        "constant": false,
                        "type": "mapping(address => struct FeePoolState.IssuanceData[6])",
                        "lineNumber": 33,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyFeePool",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 154
                    }
                ],
                "structs": [
                    {
                        "name": "IssuanceData",
                        "members": [
                            {
                                "name": "debtPercentage",
                                "type": "uint256"
                            },
                            {
                                "name": "debtEntryIndex",
                                "type": "uint256"
                            }
                        ],
                        "lineNumber": 27
                    }
                ],
                "inherits": [
                    "Owned",
                    "SelfDestructible",
                    "LimitedSetup"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/FeePoolEternalStorage.sol": {
        "imports": [
            "contracts/EternalStorage.sol",
            "contracts/LimitedSetup.sol"
        ],
        "contracts": {
            "FeePoolEternalStorage": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _feePool)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "EternalStorage",
                            "LimitedSetup"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "importFeeWithdrawalData",
                        "signature": "importFeeWithdrawalData(address[] accounts, uint256[] feePeriodIDs)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner",
                            "onlyDuringSetup"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 19,
                                "name": "require(..., Length mismatch)"
                            }
                        ],
                        "lineNumber": 14
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "LAST_FEE_WITHDRAWAL",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 10,
                        "visibility": "internal"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "EternalStorage",
                    "LimitedSetup"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/interfaces/IHasBalance.sol": {
        "imports": [],
        "contracts": {},
        "interfaces": {
            "IHasBalance": {
                "functions": [
                    {
                        "name": "balanceOf",
                        "signature": "balanceOf(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 6
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/IssuanceEternalStorage.sol": {
        "imports": [
            "contracts/EternalStorage.sol"
        ],
        "contracts": {
            "IssuanceEternalStorage": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _issuer)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "EternalStorage"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 11
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "EternalStorage"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/Issuer.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/MixinResolver.sol",
            "contracts/interfaces/IIssuer.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/IssuanceEternalStorage.sol",
            "contracts/interfaces/ISynthetix.sol",
            "contracts/interfaces/IFeePool.sol",
            "contracts/interfaces/ISynthetixState.sol",
            "contracts/interfaces/IExchanger.sol",
            "contracts/interfaces/IDelegateApprovals.sol"
        ],
        "contracts": {
            "Issuer": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "MixinResolver"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 51
                    },
                    {
                        "name": "synthetix",
                        "signature": "synthetix()",
                        "returns": "(contract ISynthetix)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 54
                    },
                    {
                        "name": "exchanger",
                        "signature": "exchanger()",
                        "returns": "(contract IExchanger)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 58
                    },
                    {
                        "name": "synthetixState",
                        "signature": "synthetixState()",
                        "returns": "(contract ISynthetixState)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 62
                    },
                    {
                        "name": "feePool",
                        "signature": "feePool()",
                        "returns": "(contract IFeePool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 66
                    },
                    {
                        "name": "delegateApprovals",
                        "signature": "delegateApprovals()",
                        "returns": "(contract IDelegateApprovals)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 70
                    },
                    {
                        "name": "issuanceEternalStorage",
                        "signature": "issuanceEternalStorage()",
                        "returns": "(contract IssuanceEternalStorage)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 74
                    },
                    {
                        "name": "canBurnSynths",
                        "signature": "canBurnSynths(address account)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 83
                    },
                    {
                        "name": "lastIssueEvent",
                        "signature": "lastIssueEvent(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 87
                    },
                    {
                        "name": "setMinimumStakeTime",
                        "signature": "setMinimumStakeTime(uint256 _seconds)",
                        "returns": "()",
                        "events": [
                            "MinimumStakeTimeUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 96,
                                "name": "require(..., stake time exceed maximum 1 week)"
                            }
                        ],
                        "lineNumber": 94
                    },
                    {
                        "name": "_setLastIssueEvent",
                        "signature": "_setLastIssueEvent(address account)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 102
                    },
                    {
                        "name": "issueSynthsOnBehalf",
                        "signature": "issueSynthsOnBehalf(address issueForAddress, address from, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlySynthetix"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 112,
                                "name": "require(..., Not approved to act on behalf)"
                            },
                            {
                                "lineNumber": 115,
                                "name": "require(..., Amount too large)"
                            }
                        ],
                        "lineNumber": 107
                    },
                    {
                        "name": "issueMaxSynthsOnBehalf",
                        "signature": "issueMaxSynthsOnBehalf(address issueForAddress, address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlySynthetix"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 120,
                                "name": "require(..., Not approved to act on behalf)"
                            }
                        ],
                        "lineNumber": 119
                    },
                    {
                        "name": "issueSynths",
                        "signature": "issueSynths(address from, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlySynthetix"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 129,
                                "name": "require(..., Amount too large)"
                            }
                        ],
                        "lineNumber": 126
                    },
                    {
                        "name": "issueMaxSynths",
                        "signature": "issueMaxSynths(address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlySynthetix"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 134
                    },
                    {
                        "name": "_internalIssueSynths",
                        "signature": "_internalIssueSynths(address from, uint256 amount, uint256 existingDebt, uint256 totalSystemDebt)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 142
                    },
                    {
                        "name": "burnSynthsOnBehalf",
                        "signature": "burnSynthsOnBehalf(address burnForAddress, address from, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlySynthetix"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 166,
                                "name": "require(..., Not approved to act on behalf)"
                            }
                        ],
                        "lineNumber": 161
                    },
                    {
                        "name": "burnSynths",
                        "signature": "burnSynths(address from, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlySynthetix"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 170
                    },
                    {
                        "name": "_burnSynths",
                        "signature": "_burnSynths(address from, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 176,
                                "name": "require(..., Minimum stake time not reached)"
                            },
                            {
                                "lineNumber": 184,
                                "name": "require(..., No debt to forgive)"
                            }
                        ],
                        "lineNumber": 175
                    },
                    {
                        "name": "burnSynthsToTargetOnBehalf",
                        "signature": "burnSynthsToTargetOnBehalf(address burnForAddress, address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlySynthetix"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 196,
                                "name": "require(..., Not approved to act on behalf)"
                            }
                        ],
                        "lineNumber": 195
                    },
                    {
                        "name": "burnSynthsToTarget",
                        "signature": "burnSynthsToTarget(address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlySynthetix"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 200
                    },
                    {
                        "name": "_burnSynthsToTarget",
                        "signature": "_burnSynthsToTarget(address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 210,
                                "name": "require(..., No debt to forgive)"
                            }
                        ],
                        "lineNumber": 206
                    },
                    {
                        "name": "_internalBurnSynths",
                        "signature": "_internalBurnSynths(address from, uint256 amount, uint256 existingDebt, uint256 totalSystemValue)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 223
                    },
                    {
                        "name": "_appendAccountIssuanceRecord",
                        "signature": "_appendAccountIssuanceRecord(address from)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 252
                    },
                    {
                        "name": "_addToDebtRegister",
                        "signature": "_addToDebtRegister(address from, uint256 amount, uint256 existingDebt, uint256 totalDebtIssued)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 265
                    },
                    {
                        "name": "_removeFromDebtRegister",
                        "signature": "_removeFromDebtRegister(address from, uint256 amount, uint256 existingDebt, uint256 totalDebtIssued)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 313
                    }
                ],
                "events": [
                    {
                        "name": "MinimumStakeTimeUpdated",
                        "parameters": "(uint256 minimumStakeTime)",
                        "lineNumber": 366
                    }
                ],
                "variables": [
                    {
                        "name": "sUSD",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 25,
                        "visibility": "private"
                    },
                    {
                        "name": "LAST_ISSUE_EVENT",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 26,
                        "visibility": "public"
                    },
                    {
                        "name": "MAX_MINIMUM_STAKING_TIME",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 29,
                        "visibility": "public"
                    },
                    {
                        "name": "minimumStakeTime",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 31,
                        "visibility": "public"
                    },
                    {
                        "name": "CONTRACT_SYNTHETIX",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 35,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXCHANGER",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 36,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHETIXSTATE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 37,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_FEEPOOL",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 38,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_DELEGATEAPPROVALS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 39,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_ISSUANCEETERNALSTORAGE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 40,
                        "visibility": "private"
                    },
                    {
                        "name": "addressesToCache",
                        "constant": false,
                        "type": "bytes32[24]",
                        "lineNumber": 42,
                        "visibility": "private"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlySynthetix",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 359
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned",
                    "MixinResolver",
                    "IIssuer"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/Math.sol": {
        "imports": [
            "contracts/SafeDecimalMath.sol"
        ],
        "contracts": {},
        "interfaces": {},
        "libraries": {
            "Math": {
                "functions": [
                    {
                        "name": "powDecimal",
                        "signature": "powDecimal(uint256 x, uint256 n)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 18
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        }
    },
    "contracts/MultiCollateralSynth.sol": {
        "imports": [
            "contracts/Synth.sol"
        ],
        "contracts": {
            "MultiCollateralSynth": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address payable _proxy, contract TokenState _tokenState, string _tokenName, string _tokenSymbol, address _owner, bytes32 _currencyKey, uint256 _totalSupply, address _resolver, bytes32 _multiCollateralKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Synth"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 13
                    },
                    {
                        "name": "multiCollateral",
                        "signature": "multiCollateral()",
                        "returns": "(address)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 31
                    },
                    {
                        "name": "issue",
                        "signature": "issue(address account, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyInternalContracts"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 42
                    },
                    {
                        "name": "burn",
                        "signature": "burn(address account, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyInternalContracts"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 51
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "multiCollateralKey",
                        "constant": false,
                        "type": "bytes32",
                        "lineNumber": 9,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyInternalContracts",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 58
                    }
                ],
                "structs": [],
                "inherits": [
                    "Synth"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/Synth.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/ExternStateToken.sol",
            "contracts/MixinResolver.sol",
            "contracts/interfaces/ISynth.sol",
            "contracts/interfaces/IERC20.sol",
            "contracts/interfaces/ISystemStatus.sol",
            "contracts/interfaces/IFeePool.sol",
            "contracts/interfaces/ISynthetix.sol",
            "contracts/interfaces/IExchanger.sol",
            "contracts/interfaces/IIssuer.sol"
        ],
        "contracts": {
            "Synth": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address payable _proxy, contract TokenState _tokenState, string _tokenName, string _tokenSymbol, address _owner, bytes32 _currencyKey, uint256 _totalSupply, address _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "ExternStateToken",
                            "MixinResolver"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 61,
                                "name": "require(..., _proxy cannot be 0)"
                            },
                            {
                                "lineNumber": 62,
                                "name": "require(..., _owner cannot be 0)"
                            }
                        ],
                        "lineNumber": 47
                    },
                    {
                        "name": "transfer",
                        "signature": "transfer(address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 69
                    },
                    {
                        "name": "transferAndSettle",
                        "signature": "transferAndSettle(address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 85
                    },
                    {
                        "name": "transferFrom",
                        "signature": "transferFrom(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 103
                    },
                    {
                        "name": "transferFromAndSettle",
                        "signature": "transferFromAndSettle(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 113
                    },
                    {
                        "name": "_transferToFeeAddress",
                        "signature": "_transferToFeeAddress(address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 139
                    },
                    {
                        "name": "issue",
                        "signature": "issue(address account, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyInternalContracts"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 159
                    },
                    {
                        "name": "burn",
                        "signature": "burn(address account, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyInternalContracts"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 165
                    },
                    {
                        "name": "_internalIssue",
                        "signature": "_internalIssue(address account, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 169
                    },
                    {
                        "name": "_internalBurn",
                        "signature": "_internalBurn(address account, uint256 amount)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 176
                    },
                    {
                        "name": "setTotalSupply",
                        "signature": "setTotalSupply(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 186
                    },
                    {
                        "name": "systemStatus",
                        "signature": "systemStatus()",
                        "returns": "(contract ISystemStatus)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 191
                    },
                    {
                        "name": "synthetix",
                        "signature": "synthetix()",
                        "returns": "(contract ISynthetix)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 195
                    },
                    {
                        "name": "feePool",
                        "signature": "feePool()",
                        "returns": "(contract IFeePool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 199
                    },
                    {
                        "name": "exchanger",
                        "signature": "exchanger()",
                        "returns": "(contract IExchanger)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 203
                    },
                    {
                        "name": "issuer",
                        "signature": "issuer()",
                        "returns": "(contract IIssuer)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 207
                    },
                    {
                        "name": "_ensureCanTransfer",
                        "signature": "_ensureCanTransfer(address from, uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 212,
                                "name": "require(..., Cannot transfer during waiting period)"
                            },
                            {
                                "lineNumber": 213,
                                "name": "require(..., Insufficient balance after any settlement owing)"
                            }
                        ],
                        "lineNumber": 211
                    },
                    {
                        "name": "transferableSynths",
                        "signature": "transferableSynths(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 217
                    },
                    {
                        "name": "_internalTransferFrom",
                        "signature": "_internalTransferFrom(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 234
                    },
                    {
                        "name": "emitIssued",
                        "signature": "emitIssued(address account, uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 268
                    },
                    {
                        "name": "emitBurned",
                        "signature": "emitBurned(address account, uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 275
                    }
                ],
                "events": [
                    {
                        "name": "Issued",
                        "parameters": "(address account, uint256 value)",
                        "lineNumber": 265
                    },
                    {
                        "name": "Burned",
                        "parameters": "(address account, uint256 value)",
                        "lineNumber": 272
                    }
                ],
                "variables": [
                    {
                        "name": "currencyKey",
                        "constant": false,
                        "type": "bytes32",
                        "lineNumber": 22,
                        "visibility": "public"
                    },
                    {
                        "name": "DECIMALS",
                        "constant": true,
                        "type": "uint8",
                        "lineNumber": 24,
                        "visibility": "public"
                    },
                    {
                        "name": "FEE_ADDRESS",
                        "constant": true,
                        "type": "address",
                        "lineNumber": 27,
                        "visibility": "public"
                    },
                    {
                        "name": "CONTRACT_SYSTEMSTATUS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 31,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHETIX",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 32,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXCHANGER",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 33,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_ISSUER",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 34,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_FEEPOOL",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 35,
                        "visibility": "private"
                    },
                    {
                        "name": "addressesToCache",
                        "constant": false,
                        "type": "bytes32[24]",
                        "lineNumber": 37,
                        "visibility": "internal"
                    },
                    {
                        "name": "ISSUED_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 266,
                        "visibility": "private"
                    },
                    {
                        "name": "BURNED_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 273,
                        "visibility": "private"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyInternalContracts",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 251
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned",
                    "IERC20",
                    "ExternStateToken",
                    "MixinResolver",
                    "ISynth"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/ProxyERC20.sol": {
        "imports": [
            "contracts/Proxy.sol",
            "contracts/interfaces/IERC20.sol"
        ],
        "contracts": {
            "ProxyERC20": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Proxy"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "name",
                        "signature": "name()",
                        "returns": "(string)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 14
                    },
                    {
                        "name": "symbol",
                        "signature": "symbol()",
                        "returns": "(string)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 19
                    },
                    {
                        "name": "decimals",
                        "signature": "decimals()",
                        "returns": "(uint8)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 24
                    },
                    {
                        "name": "totalSupply",
                        "signature": "totalSupply()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 34
                    },
                    {
                        "name": "balanceOf",
                        "signature": "balanceOf(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 44
                    },
                    {
                        "name": "allowance",
                        "signature": "allowance(address owner, address spender)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 55
                    },
                    {
                        "name": "transfer",
                        "signature": "transfer(address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 65
                    },
                    {
                        "name": "approve",
                        "signature": "approve(address spender, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 85
                    },
                    {
                        "name": "transferFrom",
                        "signature": "transferFrom(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 102
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Proxy",
                    "IERC20"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/PurgeableSynth.sol": {
        "imports": [
            "contracts/Synth.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/interfaces/IExchangeRates.sol"
        ],
        "contracts": {
            "PurgeableSynth": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address payable _proxy, contract TokenState _tokenState, string _tokenName, string _tokenSymbol, address payable _owner, bytes32 _currencyKey, uint256 _totalSupply, address _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Synth"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 24
                    },
                    {
                        "name": "exchangeRates",
                        "signature": "exchangeRates()",
                        "returns": "(contract IExchangeRates)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 39
                    },
                    {
                        "name": "purge",
                        "signature": "purge(address[] addresses)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 55,
                                "name": "require(..., Cannot purge as total supply is above threshold and rate is not frozen.)"
                            }
                        ],
                        "lineNumber": 49
                    },
                    {
                        "name": "emitPurged",
                        "signature": "emitPurged(address account, uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 76
                    }
                ],
                "events": [
                    {
                        "name": "Purged",
                        "parameters": "(address account, uint256 value)",
                        "lineNumber": 73
                    }
                ],
                "variables": [
                    {
                        "name": "maxSupplyToPurgeInUSD",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 18,
                        "visibility": "public"
                    },
                    {
                        "name": "CONTRACT_EXRATES",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 20,
                        "visibility": "private"
                    },
                    {
                        "name": "PURGED_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 74,
                        "visibility": "private"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Synth"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/ReadProxy.sol": {
        "imports": [
            "contracts/Owned.sol"
        ],
        "contracts": {
            "ReadProxy": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "setTarget",
                        "signature": "setTarget(address _target)",
                        "returns": "()",
                        "events": [
                            "TargetUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 14
                    },
                    {
                        "name": "fallback",
                        "signature": "()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 19
                    }
                ],
                "events": [
                    {
                        "name": "TargetUpdated",
                        "parameters": "(address newTarget)",
                        "lineNumber": 36
                    }
                ],
                "variables": [
                    {
                        "name": "target",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 10,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/RewardEscrow.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/interfaces/IRewardEscrow.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/interfaces/IERC20.sol",
            "contracts/interfaces/IFeePool.sol",
            "contracts/interfaces/ISynthetix.sol"
        ],
        "contracts": {
            "RewardEscrow": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, contract ISynthetix _synthetix, contract IFeePool _feePool)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 47
                    },
                    {
                        "name": "setSynthetix",
                        "signature": "setSynthetix(contract ISynthetix _synthetix)",
                        "returns": "()",
                        "events": [
                            "SynthetixUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 61
                    },
                    {
                        "name": "setFeePool",
                        "signature": "setFeePool(contract IFeePool _feePool)",
                        "returns": "()",
                        "events": [
                            "FeePoolUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 70
                    },
                    {
                        "name": "balanceOf",
                        "signature": "balanceOf(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 80
                    },
                    {
                        "name": "_numVestingEntries",
                        "signature": "_numVestingEntries(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 84
                    },
                    {
                        "name": "numVestingEntries",
                        "signature": "numVestingEntries(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 91
                    },
                    {
                        "name": "getVestingScheduleEntry",
                        "signature": "getVestingScheduleEntry(address account, uint256 index)",
                        "returns": "(uint256[2])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 99
                    },
                    {
                        "name": "getVestingTime",
                        "signature": "getVestingTime(address account, uint256 index)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 106
                    },
                    {
                        "name": "getVestingQuantity",
                        "signature": "getVestingQuantity(address account, uint256 index)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 113
                    },
                    {
                        "name": "getNextVestingIndex",
                        "signature": "getNextVestingIndex(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 120
                    },
                    {
                        "name": "getNextVestingEntry",
                        "signature": "getNextVestingEntry(address account)",
                        "returns": "(uint256[2])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 133
                    },
                    {
                        "name": "getNextVestingTime",
                        "signature": "getNextVestingTime(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 144
                    },
                    {
                        "name": "getNextVestingQuantity",
                        "signature": "getNextVestingQuantity(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 151
                    },
                    {
                        "name": "checkAccountSchedule",
                        "signature": "checkAccountSchedule(address account)",
                        "returns": "(uint256[520])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 161
                    },
                    {
                        "name": "_appendVestingEntry",
                        "signature": "_appendVestingEntry(address account, uint256 quantity)",
                        "returns": "()",
                        "events": [
                            "VestingEntryCreated"
                        ],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 176,
                                "name": "require(..., Quantity cannot be zero)"
                            },
                            {
                                "lineNumber": 180,
                                "name": "require(..., Must be enough balance in the contract to provide for the vesting entry)"
                            },
                            {
                                "lineNumber": 187,
                                "name": "require(..., Vesting schedule is too long)"
                            }
                        ],
                        "lineNumber": 174
                    },
                    {
                        "name": "appendVestingEntry",
                        "signature": "appendVestingEntry(address account, uint256 quantity)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyFeePool"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 218
                    },
                    {
                        "name": "vest",
                        "signature": "vest()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 225
                    }
                ],
                "events": [
                    {
                        "name": "SynthetixUpdated",
                        "parameters": "(address newSynthetix)",
                        "lineNumber": 263
                    },
                    {
                        "name": "FeePoolUpdated",
                        "parameters": "(address newFeePool)",
                        "lineNumber": 265
                    },
                    {
                        "name": "Vested",
                        "parameters": "(address beneficiary, uint256 time, uint256 value)",
                        "lineNumber": 267
                    },
                    {
                        "name": "VestingEntryCreated",
                        "parameters": "(address beneficiary, uint256 time, uint256 value)",
                        "lineNumber": 269
                    }
                ],
                "variables": [
                    {
                        "name": "synthetix",
                        "constant": false,
                        "type": "contract ISynthetix",
                        "lineNumber": 21,
                        "visibility": "public"
                    },
                    {
                        "name": "feePool",
                        "constant": false,
                        "type": "contract IFeePool",
                        "lineNumber": 23,
                        "visibility": "public"
                    },
                    {
                        "name": "vestingSchedules",
                        "constant": false,
                        "type": "mapping(address => uint256[2][])",
                        "lineNumber": 27,
                        "visibility": "public"
                    },
                    {
                        "name": "totalEscrowedAccountBalance",
                        "constant": false,
                        "type": "mapping(address => uint256)",
                        "lineNumber": 30,
                        "visibility": "public"
                    },
                    {
                        "name": "totalVestedAccountBalance",
                        "constant": false,
                        "type": "mapping(address => uint256)",
                        "lineNumber": 33,
                        "visibility": "public"
                    },
                    {
                        "name": "totalEscrowedBalance",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 36,
                        "visibility": "public"
                    },
                    {
                        "name": "TIME_INDEX",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 38,
                        "visibility": "internal"
                    },
                    {
                        "name": "QUANTITY_INDEX",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 39,
                        "visibility": "internal"
                    },
                    {
                        "name": "MAX_VESTING_ENTRIES",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 43,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyFeePool",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 254
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned",
                    "IRewardEscrow"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/RewardsDistribution.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/interfaces/IRewardsDistribution.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/interfaces/IERC20.sol",
            "contracts/interfaces/IFeePool.sol"
        ],
        "contracts": {
            "RewardsDistribution": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _authority, address _synthetixProxy, address _rewardEscrow, address _feePoolProxy)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 58
                    },
                    {
                        "name": "setSynthetixProxy",
                        "signature": "setSynthetixProxy(address _synthetixProxy)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 73
                    },
                    {
                        "name": "setRewardEscrow",
                        "signature": "setRewardEscrow(address _rewardEscrow)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 77
                    },
                    {
                        "name": "setFeePoolProxy",
                        "signature": "setFeePoolProxy(address _feePoolProxy)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 81
                    },
                    {
                        "name": "setAuthority",
                        "signature": "setAuthority(address _authority)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 89
                    },
                    {
                        "name": "addRewardDistribution",
                        "signature": "addRewardDistribution(address destination, uint256 amount)",
                        "returns": "(bool)",
                        "events": [
                            "RewardDistributionAdded"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 104,
                                "name": "require(..., Cant add a zero address)"
                            },
                            {
                                "lineNumber": 105,
                                "name": "require(..., Cant add a zero amount)"
                            }
                        ],
                        "lineNumber": 103
                    },
                    {
                        "name": "removeRewardDistribution",
                        "signature": "removeRewardDistribution(uint256 index)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 120,
                                "name": "require(..., index out of bounds)"
                            }
                        ],
                        "lineNumber": 119
                    },
                    {
                        "name": "editRewardDistribution",
                        "signature": "editRewardDistribution(uint256 index, address destination, uint256 amount)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 145,
                                "name": "require(..., index out of bounds)"
                            }
                        ],
                        "lineNumber": 140
                    },
                    {
                        "name": "distributeRewards",
                        "signature": "distributeRewards(uint256 amount)",
                        "returns": "(bool)",
                        "events": [
                            "RewardsDistributed"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 154,
                                "name": "require(..., Caller is not authorised)"
                            },
                            {
                                "lineNumber": 155,
                                "name": "require(..., RewardEscrow is not set)"
                            },
                            {
                                "lineNumber": 156,
                                "name": "require(..., SynthetixProxy is not set)"
                            },
                            {
                                "lineNumber": 157,
                                "name": "require(..., FeePoolProxy is not set)"
                            },
                            {
                                "lineNumber": 158,
                                "name": "require(..., Nothing to distribute)"
                            },
                            {
                                "lineNumber": 159,
                                "name": "require(..., RewardsDistribution contract does not have enough tokens to distribute)"
                            }
                        ],
                        "lineNumber": 153
                    },
                    {
                        "name": "distributionsLength",
                        "signature": "distributionsLength()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 201
                    }
                ],
                "events": [
                    {
                        "name": "RewardDistributionAdded",
                        "parameters": "(uint256 index, address destination, uint256 amount)",
                        "lineNumber": 207
                    },
                    {
                        "name": "RewardsDistributed",
                        "parameters": "(uint256 amount)",
                        "lineNumber": 208
                    }
                ],
                "variables": [
                    {
                        "name": "authority",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 23,
                        "visibility": "public"
                    },
                    {
                        "name": "synthetixProxy",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 28,
                        "visibility": "public"
                    },
                    {
                        "name": "rewardEscrow",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 33,
                        "visibility": "public"
                    },
                    {
                        "name": "feePoolProxy",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 38,
                        "visibility": "public"
                    },
                    {
                        "name": "distributions",
                        "constant": false,
                        "type": "struct RewardsDistribution.DistributionData[]",
                        "lineNumber": 52,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [
                    {
                        "name": "DistributionData",
                        "members": [
                            {
                                "name": "destination",
                                "type": "address"
                            },
                            {
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "lineNumber": 44
                    }
                ],
                "inherits": [
                    "Owned",
                    "IRewardsDistribution"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/RewardsDistributionRecipient.sol": {
        "imports": [
            "contracts/Owned.sol"
        ],
        "contracts": {
            "RewardsDistributionRecipient": {
                "functions": [
                    {
                        "name": "notifyRewardAmount",
                        "signature": "notifyRewardAmount(uint256 reward)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 11
                    },
                    {
                        "name": "setRewardsDistribution",
                        "signature": "setRewardsDistribution(address _rewardsDistribution)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 18
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "rewardsDistribution",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 9,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlyRewardsDistribution",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 13
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/SupplySchedule.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/Math.sol",
            "contracts/Proxy.sol",
            "contracts/interfaces/ISynthetix.sol",
            "contracts/interfaces/IERC20.sol"
        ],
        "contracts": {
            "SupplySchedule": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, uint256 _lastMintEvent, uint256 _currentWeek)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 55
                    },
                    {
                        "name": "mintableSupply",
                        "signature": "mintableSupply()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 69
                    },
                    {
                        "name": "tokenDecaySupplyForWeek",
                        "signature": "tokenDecaySupplyForWeek(uint256 counter)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 114
                    },
                    {
                        "name": "terminalInflationSupply",
                        "signature": "terminalInflationSupply(uint256 totalSupply, uint256 numOfWeeks)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 127
                    },
                    {
                        "name": "weeksSinceLastIssuance",
                        "signature": "weeksSinceLastIssuance()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 139
                    },
                    {
                        "name": "isMintable",
                        "signature": "isMintable()",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 150
                    },
                    {
                        "name": "recordMintEvent",
                        "signature": "recordMintEvent(uint256 supplyMinted)",
                        "returns": "(bool)",
                        "events": [
                            "SupplyMinted"
                        ],
                        "modifiers": [
                            "onlySynthetix"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 165
                    },
                    {
                        "name": "setMinterReward",
                        "signature": "setMinterReward(uint256 amount)",
                        "returns": "()",
                        "events": [
                            "MinterRewardUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 187,
                                "name": "require(..., Reward cannot exceed max minter reward)"
                            }
                        ],
                        "lineNumber": 186
                    },
                    {
                        "name": "setSynthetixProxy",
                        "signature": "setSynthetixProxy(contract ISynthetix _synthetixProxy)",
                        "returns": "()",
                        "events": [
                            "SynthetixProxyUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 200,
                                "name": "require(..., Address cannot be 0)"
                            }
                        ],
                        "lineNumber": 199
                    }
                ],
                "events": [
                    {
                        "name": "SupplyMinted",
                        "parameters": "(uint256 supplyMinted, uint256 numberOfWeeksIssued, uint256 lastMintEvent, uint256 timestamp)",
                        "lineNumber": 222
                    },
                    {
                        "name": "MinterRewardUpdated",
                        "parameters": "(uint256 newRewardAmount)",
                        "lineNumber": 227
                    },
                    {
                        "name": "SynthetixProxyUpdated",
                        "parameters": "(address newAddress)",
                        "lineNumber": 232
                    }
                ],
                "variables": [
                    {
                        "name": "lastMintEvent",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 23,
                        "visibility": "public"
                    },
                    {
                        "name": "weekCounter",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 26,
                        "visibility": "public"
                    },
                    {
                        "name": "minterReward",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 29,
                        "visibility": "public"
                    },
                    {
                        "name": "INITIAL_WEEKLY_SUPPLY",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 33,
                        "visibility": "public"
                    },
                    {
                        "name": "synthetixProxy",
                        "constant": false,
                        "type": "address payable",
                        "lineNumber": 36,
                        "visibility": "public"
                    },
                    {
                        "name": "MAX_MINTER_REWARD",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 39,
                        "visibility": "public"
                    },
                    {
                        "name": "MINT_PERIOD_DURATION",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 42,
                        "visibility": "public"
                    },
                    {
                        "name": "INFLATION_START_DATE",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 44,
                        "visibility": "public"
                    },
                    {
                        "name": "MINT_BUFFER",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 45,
                        "visibility": "public"
                    },
                    {
                        "name": "SUPPLY_DECAY_START",
                        "constant": true,
                        "type": "uint8",
                        "lineNumber": 46,
                        "visibility": "public"
                    },
                    {
                        "name": "SUPPLY_DECAY_END",
                        "constant": true,
                        "type": "uint8",
                        "lineNumber": 47,
                        "visibility": "public"
                    },
                    {
                        "name": "DECAY_RATE",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 50,
                        "visibility": "public"
                    },
                    {
                        "name": "TERMINAL_SUPPLY_RATE_ANNUAL",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 53,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "onlySynthetix",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 210
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/Synthetix.sol": {
        "imports": [
            "contracts/ExternStateToken.sol",
            "contracts/MixinResolver.sol",
            "contracts/interfaces/ISynthetix.sol",
            "contracts/TokenState.sol",
            "contracts/interfaces/ISynth.sol",
            "contracts/interfaces/IERC20.sol",
            "contracts/interfaces/ISystemStatus.sol",
            "contracts/interfaces/IExchanger.sol",
            "contracts/interfaces/IEtherCollateral.sol",
            "contracts/interfaces/IIssuer.sol",
            "contracts/interfaces/ISynthetixState.sol",
            "contracts/interfaces/IExchangeRates.sol",
            "contracts/SupplySchedule.sol",
            "contracts/interfaces/IRewardEscrow.sol",
            "contracts/interfaces/IHasBalance.sol",
            "contracts/interfaces/IRewardsDistribution.sol"
        ],
        "contracts": {
            "Synthetix": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address payable _proxy, contract TokenState _tokenState, address _owner, uint256 _totalSupply, address _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "ExternStateToken",
                            "MixinResolver"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 66
                    },
                    {
                        "name": "systemStatus",
                        "signature": "systemStatus()",
                        "returns": "(contract ISystemStatus)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 80
                    },
                    {
                        "name": "exchanger",
                        "signature": "exchanger()",
                        "returns": "(contract IExchanger)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 84
                    },
                    {
                        "name": "etherCollateral",
                        "signature": "etherCollateral()",
                        "returns": "(contract IEtherCollateral)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 88
                    },
                    {
                        "name": "issuer",
                        "signature": "issuer()",
                        "returns": "(contract IIssuer)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 92
                    },
                    {
                        "name": "synthetixState",
                        "signature": "synthetixState()",
                        "returns": "(contract ISynthetixState)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 96
                    },
                    {
                        "name": "exchangeRates",
                        "signature": "exchangeRates()",
                        "returns": "(contract IExchangeRates)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 100
                    },
                    {
                        "name": "supplySchedule",
                        "signature": "supplySchedule()",
                        "returns": "(contract SupplySchedule)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 104
                    },
                    {
                        "name": "rewardEscrow",
                        "signature": "rewardEscrow()",
                        "returns": "(contract IRewardEscrow)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 108
                    },
                    {
                        "name": "synthetixEscrow",
                        "signature": "synthetixEscrow()",
                        "returns": "(contract IHasBalance)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 112
                    },
                    {
                        "name": "rewardsDistribution",
                        "signature": "rewardsDistribution()",
                        "returns": "(contract IRewardsDistribution)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 116
                    },
                    {
                        "name": "_totalIssuedSynths",
                        "signature": "_totalIssuedSynths(bytes32 currencyKey, bool excludeEtherCollateral)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 131,
                                "name": "require(..., Rates are stale)"
                            }
                        ],
                        "lineNumber": 125
                    },
                    {
                        "name": "totalIssuedSynths",
                        "signature": "totalIssuedSynths(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 156
                    },
                    {
                        "name": "totalIssuedSynthsExcludeEtherCollateral",
                        "signature": "totalIssuedSynthsExcludeEtherCollateral(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 164
                    },
                    {
                        "name": "availableCurrencyKeys",
                        "signature": "availableCurrencyKeys()",
                        "returns": "(bytes32[])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 168
                    },
                    {
                        "name": "availableSynthCount",
                        "signature": "availableSynthCount()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 178
                    },
                    {
                        "name": "isWaitingPeriod",
                        "signature": "isWaitingPeriod(bytes32 currencyKey)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 182
                    },
                    {
                        "name": "addSynth",
                        "signature": "addSynth(contract ISynth synth)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 195,
                                "name": "require(..., Synth already exists)"
                            },
                            {
                                "lineNumber": 196,
                                "name": "require(..., Synth address already exists)"
                            }
                        ],
                        "lineNumber": 192
                    },
                    {
                        "name": "removeSynth",
                        "signature": "removeSynth(bytes32 currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy_onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 208,
                                "name": "require(..., Synth does not exist)"
                            },
                            {
                                "lineNumber": 209,
                                "name": "require(..., Synth supply exists)"
                            },
                            {
                                "lineNumber": 210,
                                "name": "require(..., Cannot remove synth)"
                            }
                        ],
                        "lineNumber": 207
                    },
                    {
                        "name": "transfer",
                        "signature": "transfer(address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 248,
                                "name": "require(..., Cannot transfer staked or escrowed SNX)"
                            }
                        ],
                        "lineNumber": 244
                    },
                    {
                        "name": "transferFrom",
                        "signature": "transferFrom(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 267,
                                "name": "require(..., Cannot transfer staked or escrowed SNX)"
                            }
                        ],
                        "lineNumber": 259
                    },
                    {
                        "name": "issueSynths",
                        "signature": "issueSynths(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 274
                    },
                    {
                        "name": "issueSynthsOnBehalf",
                        "signature": "issueSynthsOnBehalf(address issueForAddress, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 280
                    },
                    {
                        "name": "issueMaxSynths",
                        "signature": "issueMaxSynths()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 286
                    },
                    {
                        "name": "issueMaxSynthsOnBehalf",
                        "signature": "issueMaxSynthsOnBehalf(address issueForAddress)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 292
                    },
                    {
                        "name": "burnSynths",
                        "signature": "burnSynths(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 298
                    },
                    {
                        "name": "burnSynthsOnBehalf",
                        "signature": "burnSynthsOnBehalf(address burnForAddress, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 304
                    },
                    {
                        "name": "burnSynthsToTarget",
                        "signature": "burnSynthsToTarget()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 310
                    },
                    {
                        "name": "burnSynthsToTargetOnBehalf",
                        "signature": "burnSynthsToTargetOnBehalf(address burnForAddress)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 316
                    },
                    {
                        "name": "exchange",
                        "signature": "exchange(bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 322
                    },
                    {
                        "name": "exchangeOnBehalf",
                        "signature": "exchangeOnBehalf(address exchangeForAddress, bytes32 sourceCurrencyKey, uint256 sourceAmount, bytes32 destinationCurrencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 334
                    },
                    {
                        "name": "settle",
                        "signature": "settle(bytes32 currencyKey)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 354
                    },
                    {
                        "name": "maxIssuableSynths",
                        "signature": "maxIssuableSynths(address _issuer)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 372
                    },
                    {
                        "name": "collateralisationRatio",
                        "signature": "collateralisationRatio(address _issuer)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 396
                    },
                    {
                        "name": "debtBalanceOf",
                        "signature": "debtBalanceOf(address _issuer, bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 410
                    },
                    {
                        "name": "debtBalanceOfAndTotalDebt",
                        "signature": "debtBalanceOfAndTotalDebt(address _issuer, bytes32 currencyKey)",
                        "returns": "(uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 430
                    },
                    {
                        "name": "remainingIssuableSynths",
                        "signature": "remainingIssuableSynths(address _issuer)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 468
                    },
                    {
                        "name": "collateral",
                        "signature": "collateral(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 494
                    },
                    {
                        "name": "transferableSynthetix",
                        "signature": "transferableSynthetix(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "rateNotStale"
                        ],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 514
                    },
                    {
                        "name": "mint",
                        "signature": "mint()",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 546,
                                "name": "require(..., RewardsDistribution not set)"
                            },
                            {
                                "lineNumber": 554,
                                "name": "require(..., No supply is mintable)"
                            }
                        ],
                        "lineNumber": 545
                    },
                    {
                        "name": "emitSynthExchange",
                        "signature": "emitSynthExchange(address account, bytes32 fromCurrencyKey, uint256 fromAmount, bytes32 toCurrencyKey, uint256 toAmount, address toAddress)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyExchanger"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 610
                    },
                    {
                        "name": "emitExchangeReclaim",
                        "signature": "emitExchangeReclaim(address account, bytes32 currencyKey, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyExchanger"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 631
                    },
                    {
                        "name": "emitExchangeRebate",
                        "signature": "emitExchangeRebate(address account, bytes32 currencyKey, uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyExchanger"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 642
                    }
                ],
                "events": [
                    {
                        "name": "SynthExchange",
                        "parameters": "(address account, bytes32 fromCurrencyKey, uint256 fromAmount, bytes32 toCurrencyKey, uint256 toAmount, address toAddress)",
                        "lineNumber": 598
                    },
                    {
                        "name": "ExchangeReclaim",
                        "parameters": "(address account, bytes32 currencyKey, uint256 amount)",
                        "lineNumber": 628
                    },
                    {
                        "name": "ExchangeRebate",
                        "parameters": "(address account, bytes32 currencyKey, uint256 amount)",
                        "lineNumber": 639
                    }
                ],
                "variables": [
                    {
                        "name": "availableSynths",
                        "constant": false,
                        "type": "contract ISynth[]",
                        "lineNumber": 29,
                        "visibility": "public"
                    },
                    {
                        "name": "synths",
                        "constant": false,
                        "type": "mapping(bytes32 => contract ISynth)",
                        "lineNumber": 30,
                        "visibility": "public"
                    },
                    {
                        "name": "synthsByAddress",
                        "constant": false,
                        "type": "mapping(address => bytes32)",
                        "lineNumber": 31,
                        "visibility": "public"
                    },
                    {
                        "name": "TOKEN_NAME",
                        "constant": true,
                        "type": "string",
                        "lineNumber": 33,
                        "visibility": "public"
                    },
                    {
                        "name": "TOKEN_SYMBOL",
                        "constant": true,
                        "type": "string",
                        "lineNumber": 34,
                        "visibility": "public"
                    },
                    {
                        "name": "DECIMALS",
                        "constant": true,
                        "type": "uint8",
                        "lineNumber": 35,
                        "visibility": "public"
                    },
                    {
                        "name": "sUSD",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 36,
                        "visibility": "public"
                    },
                    {
                        "name": "CONTRACT_SYSTEMSTATUS",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 40,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXCHANGER",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 41,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_ETHERCOLLATERAL",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 42,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_ISSUER",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 43,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHETIXSTATE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 44,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXRATES",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 45,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SUPPLYSCHEDULE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 46,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_REWARDESCROW",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 47,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_SYNTHETIXESCROW",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 48,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_REWARDSDISTRIBUTION",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 49,
                        "visibility": "private"
                    },
                    {
                        "name": "addressesToCache",
                        "constant": false,
                        "type": "bytes32[24]",
                        "lineNumber": 51,
                        "visibility": "private"
                    },
                    {
                        "name": "SYNTHEXCHANGE_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 606,
                        "visibility": "internal"
                    },
                    {
                        "name": "EXCHANGERECLAIM_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 629,
                        "visibility": "internal"
                    },
                    {
                        "name": "EXCHANGEREBATE_SIG",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 640,
                        "visibility": "internal"
                    }
                ],
                "modifiers": [
                    {
                        "name": "rateNotStale",
                        "parameters": "(bytes32 currencyKey)",
                        "visibility": "internal",
                        "lineNumber": 586
                    },
                    {
                        "name": "onlyExchanger",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 591
                    }
                ],
                "structs": [],
                "inherits": [
                    "IERC20",
                    "ExternStateToken",
                    "MixinResolver",
                    "ISynthetix"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/SynthetixEscrow.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/LimitedSetup.sol",
            "contracts/interfaces/IHasBalance.sol",
            "contracts/SafeDecimalMath.sol",
            "contracts/interfaces/IERC20.sol",
            "contracts/interfaces/ISynthetix.sol"
        ],
        "contracts": {
            "SynthetixEscrow": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, contract ISynthetix _synthetix)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 41
                    },
                    {
                        "name": "setSynthetix",
                        "signature": "setSynthetix(contract ISynthetix _synthetix)",
                        "returns": "()",
                        "events": [
                            "SynthetixUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 47
                    },
                    {
                        "name": "balanceOf",
                        "signature": "balanceOf(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 57
                    },
                    {
                        "name": "numVestingEntries",
                        "signature": "numVestingEntries(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 64
                    },
                    {
                        "name": "getVestingScheduleEntry",
                        "signature": "getVestingScheduleEntry(address account, uint256 index)",
                        "returns": "(uint256[2])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 72
                    },
                    {
                        "name": "getVestingTime",
                        "signature": "getVestingTime(address account, uint256 index)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 79
                    },
                    {
                        "name": "getVestingQuantity",
                        "signature": "getVestingQuantity(address account, uint256 index)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 86
                    },
                    {
                        "name": "getNextVestingIndex",
                        "signature": "getNextVestingIndex(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 93
                    },
                    {
                        "name": "getNextVestingEntry",
                        "signature": "getNextVestingEntry(address account)",
                        "returns": "(uint256[2])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 106
                    },
                    {
                        "name": "getNextVestingTime",
                        "signature": "getNextVestingTime(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 117
                    },
                    {
                        "name": "getNextVestingQuantity",
                        "signature": "getNextVestingQuantity(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 124
                    },
                    {
                        "name": "withdrawSynthetix",
                        "signature": "withdrawSynthetix(uint256 quantity)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner",
                            "onlyDuringSetup"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 134
                    },
                    {
                        "name": "purgeAccount",
                        "signature": "purgeAccount(address account)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner",
                            "onlyDuringSetup"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 141
                    },
                    {
                        "name": "appendVestingEntry",
                        "signature": "appendVestingEntry(address account, uint256 time, uint256 quantity)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner",
                            "onlyDuringSetup"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 166,
                                "name": "require(..., Time must be in the future)"
                            },
                            {
                                "lineNumber": 167,
                                "name": "require(..., Quantity cannot be zero)"
                            },
                            {
                                "lineNumber": 171,
                                "name": "require(..., Must be enough balance in the contract to provide for the vesting entry)"
                            },
                            {
                                "lineNumber": 178,
                                "name": "require(..., Vesting schedule is too long)"
                            }
                        ],
                        "lineNumber": 160
                    },
                    {
                        "name": "addVestingSchedule",
                        "signature": "addVestingSchedule(address account, uint256[] times, uint256[] quantities)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner",
                            "onlyDuringSetup"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 202
                    },
                    {
                        "name": "vest",
                        "signature": "vest()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 215
                    }
                ],
                "events": [
                    {
                        "name": "SynthetixUpdated",
                        "parameters": "(address newSynthetix)",
                        "lineNumber": 243
                    },
                    {
                        "name": "Vested",
                        "parameters": "(address beneficiary, uint256 time, uint256 value)",
                        "lineNumber": 245
                    }
                ],
                "variables": [
                    {
                        "name": "synthetix",
                        "constant": false,
                        "type": "contract ISynthetix",
                        "lineNumber": 21,
                        "visibility": "public"
                    },
                    {
                        "name": "vestingSchedules",
                        "constant": false,
                        "type": "mapping(address => uint256[2][])",
                        "lineNumber": 25,
                        "visibility": "public"
                    },
                    {
                        "name": "totalVestedAccountBalance",
                        "constant": false,
                        "type": "mapping(address => uint256)",
                        "lineNumber": 28,
                        "visibility": "public"
                    },
                    {
                        "name": "totalVestedBalance",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 31,
                        "visibility": "public"
                    },
                    {
                        "name": "TIME_INDEX",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 33,
                        "visibility": "public"
                    },
                    {
                        "name": "QUANTITY_INDEX",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 34,
                        "visibility": "public"
                    },
                    {
                        "name": "MAX_VESTING_ENTRIES",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 37,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "LimitedSetup",
                    "IHasBalance"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/SynthetixState.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/State.sol",
            "contracts/LimitedSetup.sol",
            "contracts/interfaces/ISynthetixState.sol",
            "contracts/SafeDecimalMath.sol"
        ],
        "contracts": {
            "SynthetixState": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _associatedContract)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "State",
                            "LimitedSetup"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 51
                    },
                    {
                        "name": "setCurrentIssuanceData",
                        "signature": "setCurrentIssuanceData(address account, uint256 initialDebtOwnership)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 66
                    },
                    {
                        "name": "clearIssuanceData",
                        "signature": "clearIssuanceData(address account)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 76
                    },
                    {
                        "name": "incrementTotalIssuerCount",
                        "signature": "incrementTotalIssuerCount()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 84
                    },
                    {
                        "name": "decrementTotalIssuerCount",
                        "signature": "decrementTotalIssuerCount()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 92
                    },
                    {
                        "name": "appendDebtLedgerValue",
                        "signature": "appendDebtLedgerValue(uint256 value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 101
                    },
                    {
                        "name": "setPreferredCurrency",
                        "signature": "setPreferredCurrency(address account, bytes4 currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 111
                    },
                    {
                        "name": "setIssuanceRatio",
                        "signature": "setIssuanceRatio(uint256 _issuanceRatio)",
                        "returns": "()",
                        "events": [
                            "IssuanceRatioUpdated"
                        ],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 120,
                                "name": "require(..., New issuance ratio cannot exceed MAX_ISSUANCE_RATIO)"
                            }
                        ],
                        "lineNumber": 119
                    },
                    {
                        "name": "debtLedgerLength",
                        "signature": "debtLedgerLength()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 153
                    },
                    {
                        "name": "lastDebtLedgerEntry",
                        "signature": "lastDebtLedgerEntry()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 160
                    },
                    {
                        "name": "hasIssued",
                        "signature": "hasIssued(address account)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 168
                    }
                ],
                "events": [
                    {
                        "name": "IssuanceRatioUpdated",
                        "parameters": "(uint256 newRatio)",
                        "lineNumber": 172
                    }
                ],
                "variables": [
                    {
                        "name": "issuanceData",
                        "constant": false,
                        "type": "mapping(address => struct SynthetixState.IssuanceData)",
                        "lineNumber": 33,
                        "visibility": "public"
                    },
                    {
                        "name": "totalIssuerCount",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 36,
                        "visibility": "public"
                    },
                    {
                        "name": "debtLedger",
                        "constant": false,
                        "type": "uint256[]",
                        "lineNumber": 39,
                        "visibility": "public"
                    },
                    {
                        "name": "issuanceRatio",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 43,
                        "visibility": "public"
                    },
                    {
                        "name": "MAX_ISSUANCE_RATIO",
                        "constant": true,
                        "type": "uint256",
                        "lineNumber": 45,
                        "visibility": "public"
                    },
                    {
                        "name": "preferredCurrency",
                        "constant": false,
                        "type": "mapping(address => bytes4)",
                        "lineNumber": 49,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [
                    {
                        "name": "IssuanceData",
                        "members": [
                            {
                                "name": "initialDebtOwnership",
                                "type": "uint256"
                            },
                            {
                                "name": "debtEntryIndex",
                                "type": "uint256"
                            }
                        ],
                        "lineNumber": 19
                    }
                ],
                "inherits": [
                    "Owned",
                    "State",
                    "LimitedSetup",
                    "ISynthetixState"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/SystemStatus.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/interfaces/ISystemStatus.sol"
        ],
        "contracts": {
            "SystemStatus": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 39
                    },
                    {
                        "name": "requireSystemActive",
                        "signature": "requireSystemActive()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 48,
                                "name": "_internalRequireSystemActive"
                            }
                        ],
                        "lineNumber": 47
                    },
                    {
                        "name": "requireIssuanceActive",
                        "signature": "requireIssuanceActive()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 53,
                                "name": "_internalRequireSystemActive"
                            },
                            {
                                "lineNumber": 54,
                                "name": "require(..., Issuance is suspended. Operation prohibited)"
                            }
                        ],
                        "lineNumber": 51
                    },
                    {
                        "name": "requireExchangeActive",
                        "signature": "requireExchangeActive()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 59,
                                "name": "_internalRequireSystemActive"
                            },
                            {
                                "lineNumber": 60,
                                "name": "require(..., Exchange is suspended. Operation prohibited)"
                            }
                        ],
                        "lineNumber": 57
                    },
                    {
                        "name": "requireSynthActive",
                        "signature": "requireSynthActive(bytes32 currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 65,
                                "name": "_internalRequireSystemActive"
                            },
                            {
                                "lineNumber": 66,
                                "name": "require(..., Synth is suspended. Operation prohibited)"
                            }
                        ],
                        "lineNumber": 63
                    },
                    {
                        "name": "requireSynthsActive",
                        "signature": "requireSynthsActive(bytes32 sourceCurrencyKey, bytes32 destinationCurrencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 71,
                                "name": "_internalRequireSystemActive"
                            },
                            {
                                "lineNumber": 73,
                                "name": "require(..., One or more synths are suspended. Operation prohibited)"
                            }
                        ],
                        "lineNumber": 69
                    },
                    {
                        "name": "isSystemUpgrading",
                        "signature": "isSystemUpgrading()",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 79
                    },
                    {
                        "name": "getSynthSuspensions",
                        "signature": "getSynthSuspensions(bytes32[] synths)",
                        "returns": "(bool[], uint256[])",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 83
                    },
                    {
                        "name": "updateAccessControl",
                        "signature": "updateAccessControl(bytes32 section, address account, bool canSuspend, bool canResume)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 98
                    },
                    {
                        "name": "suspendSystem",
                        "signature": "suspendSystem(uint256 reason)",
                        "returns": "()",
                        "events": [
                            "SystemSuspended"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 108,
                                "name": "_requireAccessToSuspend"
                            }
                        ],
                        "lineNumber": 107
                    },
                    {
                        "name": "resumeSystem",
                        "signature": "resumeSystem()",
                        "returns": "()",
                        "events": [
                            "SystemResumed"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 115,
                                "name": "_requireAccessToResume"
                            }
                        ],
                        "lineNumber": 114
                    },
                    {
                        "name": "suspendIssuance",
                        "signature": "suspendIssuance(uint256 reason)",
                        "returns": "()",
                        "events": [
                            "IssuanceSuspended"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 122,
                                "name": "_requireAccessToSuspend"
                            }
                        ],
                        "lineNumber": 121
                    },
                    {
                        "name": "resumeIssuance",
                        "signature": "resumeIssuance()",
                        "returns": "()",
                        "events": [
                            "IssuanceResumed"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 129,
                                "name": "_requireAccessToResume"
                            }
                        ],
                        "lineNumber": 128
                    },
                    {
                        "name": "suspendExchange",
                        "signature": "suspendExchange(uint256 reason)",
                        "returns": "()",
                        "events": [
                            "ExchangeSuspended"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 136,
                                "name": "_requireAccessToSuspend"
                            }
                        ],
                        "lineNumber": 135
                    },
                    {
                        "name": "resumeExchange",
                        "signature": "resumeExchange()",
                        "returns": "()",
                        "events": [
                            "ExchangeResumed"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 143,
                                "name": "_requireAccessToResume"
                            }
                        ],
                        "lineNumber": 142
                    },
                    {
                        "name": "suspendSynth",
                        "signature": "suspendSynth(bytes32 currencyKey, uint256 reason)",
                        "returns": "()",
                        "events": [
                            "SynthSuspended"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 150,
                                "name": "_requireAccessToSuspend"
                            }
                        ],
                        "lineNumber": 149
                    },
                    {
                        "name": "resumeSynth",
                        "signature": "resumeSynth(bytes32 currencyKey)",
                        "returns": "()",
                        "events": [
                            "SynthResumed"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 157,
                                "name": "_requireAccessToResume"
                            }
                        ],
                        "lineNumber": 156
                    },
                    {
                        "name": "_requireAccessToSuspend",
                        "signature": "_requireAccessToSuspend(bytes32 section)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 165,
                                "name": "require(..., Restricted to access control list)"
                            }
                        ],
                        "lineNumber": 164
                    },
                    {
                        "name": "_requireAccessToResume",
                        "signature": "_requireAccessToResume(bytes32 section)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 169,
                                "name": "require(..., Restricted to access control list)"
                            }
                        ],
                        "lineNumber": 168
                    },
                    {
                        "name": "_internalRequireSystemActive",
                        "signature": "_internalRequireSystemActive()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 173,
                                "name": "require(..., memory)"
                            }
                        ],
                        "lineNumber": 172
                    },
                    {
                        "name": "_internalUpdateAccessControl",
                        "signature": "_internalUpdateAccessControl(bytes32 section, address account, bool canSuspend, bool canResume)",
                        "returns": "()",
                        "events": [
                            "AccessControlUpdated"
                        ],
                        "modifiers": [],
                        "visibility": "internal",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 187,
                                "name": "require(..., Invalid section supplied)"
                            }
                        ],
                        "lineNumber": 181
                    }
                ],
                "events": [
                    {
                        "name": "SystemSuspended",
                        "parameters": "(uint256 reason)",
                        "lineNumber": 201
                    },
                    {
                        "name": "SystemResumed",
                        "parameters": "(uint256 reason)",
                        "lineNumber": 202
                    },
                    {
                        "name": "IssuanceSuspended",
                        "parameters": "(uint256 reason)",
                        "lineNumber": 204
                    },
                    {
                        "name": "IssuanceResumed",
                        "parameters": "(uint256 reason)",
                        "lineNumber": 205
                    },
                    {
                        "name": "ExchangeSuspended",
                        "parameters": "(uint256 reason)",
                        "lineNumber": 207
                    },
                    {
                        "name": "ExchangeResumed",
                        "parameters": "(uint256 reason)",
                        "lineNumber": 208
                    },
                    {
                        "name": "SynthSuspended",
                        "parameters": "(bytes32 currencyKey, uint256 reason)",
                        "lineNumber": 210
                    },
                    {
                        "name": "SynthResumed",
                        "parameters": "(bytes32 currencyKey, uint256 reason)",
                        "lineNumber": 211
                    },
                    {
                        "name": "AccessControlUpdated",
                        "parameters": "(bytes32 section, address account, bool canSuspend, bool canResume)",
                        "lineNumber": 213
                    }
                ],
                "variables": [
                    {
                        "name": "accessControl",
                        "constant": false,
                        "type": "mapping(bytes32 => mapping(address => struct SystemStatus.Status))",
                        "lineNumber": 15,
                        "visibility": "public"
                    },
                    {
                        "name": "SUSPENSION_REASON_UPGRADE",
                        "constant": true,
                        "type": "uint248",
                        "lineNumber": 24,
                        "visibility": "public"
                    },
                    {
                        "name": "SECTION_SYSTEM",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 26,
                        "visibility": "public"
                    },
                    {
                        "name": "SECTION_ISSUANCE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 27,
                        "visibility": "public"
                    },
                    {
                        "name": "SECTION_EXCHANGE",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 28,
                        "visibility": "public"
                    },
                    {
                        "name": "SECTION_SYNTH",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 29,
                        "visibility": "public"
                    },
                    {
                        "name": "systemSuspension",
                        "constant": false,
                        "type": "struct SystemStatus.Suspension",
                        "lineNumber": 31,
                        "visibility": "public"
                    },
                    {
                        "name": "issuanceSuspension",
                        "constant": false,
                        "type": "struct SystemStatus.Suspension",
                        "lineNumber": 33,
                        "visibility": "public"
                    },
                    {
                        "name": "exchangeSuspension",
                        "constant": false,
                        "type": "struct SystemStatus.Suspension",
                        "lineNumber": 35,
                        "visibility": "public"
                    },
                    {
                        "name": "synthSuspension",
                        "constant": false,
                        "type": "mapping(bytes32 => struct SystemStatus.Suspension)",
                        "lineNumber": 37,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [
                    {
                        "name": "Status",
                        "members": [
                            {
                                "name": "canSuspend",
                                "type": "bool"
                            },
                            {
                                "name": "canResume",
                                "type": "bool"
                            }
                        ],
                        "lineNumber": 10
                    },
                    {
                        "name": "Suspension",
                        "members": [
                            {
                                "name": "suspended",
                                "type": "bool"
                            },
                            {
                                "name": "reason",
                                "type": "uint248"
                            }
                        ],
                        "lineNumber": 17
                    }
                ],
                "inherits": [
                    "Owned",
                    "ISystemStatus"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/GenericMock.sol": {
        "imports": [],
        "contracts": {
            "GenericMock": {
                "functions": [
                    {
                        "name": "fallback",
                        "signature": "()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "mockReturns",
                        "signature": "mockReturns(bytes4 key, bytes value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 17
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "mockConfig",
                        "constant": false,
                        "type": "mapping(bytes4 => bytes)",
                        "lineNumber": 7,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/MockAggregator.sol": {
        "imports": [],
        "contracts": {
            "MockAggregator": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 30
                    },
                    {
                        "name": "setLatestAnswer",
                        "signature": "setLatestAnswer(int256 answer, uint256 timestamp)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 33
                    },
                    {
                        "name": "latestAnswer",
                        "signature": "latestAnswer()",
                        "returns": "(int256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 38
                    },
                    {
                        "name": "latestTimestamp",
                        "signature": "latestTimestamp()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 42
                    },
                    {
                        "name": "latestRound",
                        "signature": "latestRound()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 46
                    },
                    {
                        "name": "getAnswer",
                        "signature": "getAnswer(uint256 _roundId)",
                        "returns": "(int256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 50
                    },
                    {
                        "name": "getTimestamp",
                        "signature": "getTimestamp(uint256 _roundId)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 54
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "roundId",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 21,
                        "visibility": "public"
                    },
                    {
                        "name": "entries",
                        "constant": false,
                        "type": "mapping(uint256 => struct MockAggregator.Entry)",
                        "lineNumber": 28,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [
                    {
                        "name": "Entry",
                        "members": [
                            {
                                "name": "answer",
                                "type": "int256"
                            },
                            {
                                "name": "timestamp",
                                "type": "uint256"
                            }
                        ],
                        "lineNumber": 23
                    }
                ],
                "inherits": [
                    "AggregatorInterface"
                ]
            }
        },
        "interfaces": {
            "AggregatorInterface": {
                "functions": [
                    {
                        "name": "latestAnswer",
                        "signature": "latestAnswer()",
                        "returns": "(int256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 5
                    },
                    {
                        "name": "latestTimestamp",
                        "signature": "latestTimestamp()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 7
                    },
                    {
                        "name": "latestRound",
                        "signature": "latestRound()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 9
                    },
                    {
                        "name": "getAnswer",
                        "signature": "getAnswer(uint256 roundId)",
                        "returns": "(int256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 11
                    },
                    {
                        "name": "getTimestamp",
                        "signature": "getTimestamp(uint256 roundId)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 13
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "libraries": {}
    },
    "contracts/test-helpers/MockEtherCollateral.sol": {
        "imports": [
            "contracts/SafeDecimalMath.sol"
        ],
        "contracts": {
            "MockEtherCollateral": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "openLoan",
                        "signature": "openLoan(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 15
                    },
                    {
                        "name": "closeLoan",
                        "signature": "closeLoan(uint256 amount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 20
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "totalIssuedSynths",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 10,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/MockExchanger.sol": {
        "imports": [
            "contracts/interfaces/ISynthetix.sol"
        ],
        "contracts": {
            "MockExchanger": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(contract ISynthetix _synthetix)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 14
                    },
                    {
                        "name": "settle",
                        "signature": "settle(address from, bytes32 currencyKey)",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 19
                    },
                    {
                        "name": "maxSecsLeftInWaitingPeriod",
                        "signature": "maxSecsLeftInWaitingPeriod(address , bytes32 )",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 41
                    },
                    {
                        "name": "settlementOwing",
                        "signature": "settlementOwing(address , bytes32 )",
                        "returns": "(uint256, uint256, uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 49
                    },
                    {
                        "name": "setReclaim",
                        "signature": "setReclaim(uint256 _reclaimAmount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 64
                    },
                    {
                        "name": "setRefund",
                        "signature": "setRefund(uint256 _refundAmount)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 68
                    },
                    {
                        "name": "setNumEntries",
                        "signature": "setNumEntries(uint256 _numEntries)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 72
                    },
                    {
                        "name": "setMaxSecsLeft",
                        "signature": "setMaxSecsLeft(uint256 _maxSecsLeft)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 76
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "_mockReclaimAmount",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 7,
                        "visibility": "private"
                    },
                    {
                        "name": "_mockRefundAmount",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 8,
                        "visibility": "private"
                    },
                    {
                        "name": "_mockNumEntries",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 9,
                        "visibility": "private"
                    },
                    {
                        "name": "_mockMaxSecsLeft",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 10,
                        "visibility": "private"
                    },
                    {
                        "name": "synthetix",
                        "constant": false,
                        "type": "contract ISynthetix",
                        "lineNumber": 12,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/MockMutator.sol": {
        "imports": [],
        "contracts": {
            "MockMutator": {
                "functions": [
                    {
                        "name": "read",
                        "signature": "read()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 7
                    },
                    {
                        "name": "update",
                        "signature": "update()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 11
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "count",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 5,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/MockRewardsRecipient.sol": {
        "imports": [
            "contracts/RewardsDistributionRecipient.sol",
            "contracts/Owned.sol"
        ],
        "contracts": {
            "MockRewardsRecipient": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "notifyRewardAmount",
                        "signature": "notifyRewardAmount(uint256 reward)",
                        "returns": "()",
                        "events": [
                            "RewardAdded"
                        ],
                        "modifiers": [
                            "onlyRewardsDistribution"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 12
                    }
                ],
                "events": [
                    {
                        "name": "RewardAdded",
                        "parameters": "(uint256 amount)",
                        "lineNumber": 17
                    }
                ],
                "variables": [
                    {
                        "name": "rewardsAvailable",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 8,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "RewardsDistributionRecipient"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/MockSynth.sol": {
        "imports": [
            "contracts/ExternStateToken.sol",
            "contracts/interfaces/ISystemStatus.sol"
        ],
        "contracts": {
            "MockSynth": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address payable _proxy, contract TokenState _tokenState, string _name, string _symbol, uint256 _totalSupply, address _owner, bytes32 _currencyKey)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "ExternStateToken"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 13
                    },
                    {
                        "name": "setSystemStatus",
                        "signature": "setSystemStatus(contract ISystemStatus _status)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 26
                    },
                    {
                        "name": "setTotalSupply",
                        "signature": "setTotalSupply(uint256 _totalSupply)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 31
                    },
                    {
                        "name": "transfer",
                        "signature": "transfer(address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 35
                    },
                    {
                        "name": "transferFrom",
                        "signature": "transferFrom(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 41
                    },
                    {
                        "name": "issue",
                        "signature": "issue(address account, uint256 amount)",
                        "returns": "()",
                        "events": [
                            "Issued"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 56
                    },
                    {
                        "name": "burn",
                        "signature": "burn(address account, uint256 amount)",
                        "returns": "()",
                        "events": [
                            "Burned"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 62
                    }
                ],
                "events": [
                    {
                        "name": "Issued",
                        "parameters": "(address account, uint256 value)",
                        "lineNumber": 51
                    },
                    {
                        "name": "Burned",
                        "parameters": "(address account, uint256 value)",
                        "lineNumber": 53
                    }
                ],
                "variables": [
                    {
                        "name": "systemStatus",
                        "constant": false,
                        "type": "contract ISystemStatus",
                        "lineNumber": 10,
                        "visibility": "private"
                    },
                    {
                        "name": "currencyKey",
                        "constant": false,
                        "type": "bytes32",
                        "lineNumber": 11,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "ExternStateToken"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/OneWeekSetup.sol": {
        "imports": [
            "contracts/LimitedSetup.sol"
        ],
        "contracts": {
            "OneWeekSetup": {
                "functions": [
                    {
                        "name": "testFunc",
                        "signature": "testFunc()",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "onlyDuringSetup"
                        ],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 7
                    },
                    {
                        "name": "publicSetupExpiryTime",
                        "signature": "publicSetupExpiryTime()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 11
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "LimitedSetup"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/PublicEST.sol": {
        "imports": [
            "contracts/ExternStateToken.sol"
        ],
        "contracts": {
            "PublicEST": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address payable _proxy, contract TokenState _tokenState, string _name, string _symbol, uint256 _totalSupply, address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "ExternStateToken"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 9
                    },
                    {
                        "name": "transfer",
                        "signature": "transfer(address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 18
                    },
                    {
                        "name": "transferFrom",
                        "signature": "transferFrom(address from, address to, uint256 value)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "optionalProxy"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 22
                    },
                    {
                        "name": "somethingToBeProxied",
                        "signature": "somethingToBeProxied(uint256 inputA, bytes32 inputB)",
                        "returns": "()",
                        "events": [
                            "Received"
                        ],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 33
                    }
                ],
                "events": [
                    {
                        "name": "Received",
                        "parameters": "(address sender, uint256 inputA, bytes32 inputB)",
                        "lineNumber": 31
                    }
                ],
                "variables": [
                    {
                        "name": "DECIMALS",
                        "constant": true,
                        "type": "uint8",
                        "lineNumber": 7,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "ExternStateToken"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/PublicMath.sol": {
        "imports": [
            "contracts/Math.sol"
        ],
        "contracts": {
            "PublicMath": {
                "functions": [
                    {
                        "name": "powerDecimal",
                        "signature": "powerDecimal(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 12
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/PublicSafeDecimalMath.sol": {
        "imports": [
            "contracts/SafeDecimalMath.sol"
        ],
        "contracts": {
            "PublicSafeDecimalMath": {
                "functions": [
                    {
                        "name": "unit",
                        "signature": "unit()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 12
                    },
                    {
                        "name": "preciseUnit",
                        "signature": "preciseUnit()",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 16
                    },
                    {
                        "name": "multiplyDecimal",
                        "signature": "multiplyDecimal(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 20
                    },
                    {
                        "name": "multiplyDecimalRound",
                        "signature": "multiplyDecimalRound(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 24
                    },
                    {
                        "name": "multiplyDecimalRoundPrecise",
                        "signature": "multiplyDecimalRoundPrecise(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 28
                    },
                    {
                        "name": "divideDecimal",
                        "signature": "divideDecimal(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 32
                    },
                    {
                        "name": "divideDecimalRound",
                        "signature": "divideDecimalRound(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 36
                    },
                    {
                        "name": "divideDecimalRoundPrecise",
                        "signature": "divideDecimalRoundPrecise(uint256 x, uint256 y)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 40
                    },
                    {
                        "name": "decimalToPreciseDecimal",
                        "signature": "decimalToPreciseDecimal(uint256 i)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 44
                    },
                    {
                        "name": "preciseDecimalToDecimal",
                        "signature": "preciseDecimalToDecimal(uint256 i)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "pure",
                        "requires": [],
                        "lineNumber": 48
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/TestableMixinResolver.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/MixinResolver.sol"
        ],
        "contracts": {
            "TestableMixinResolver": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "MixinResolver"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 14
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "CONTRACT_EXAMPLE_1",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 8,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXAMPLE_2",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 9,
                        "visibility": "private"
                    },
                    {
                        "name": "CONTRACT_EXAMPLE_3",
                        "constant": true,
                        "type": "bytes32",
                        "lineNumber": 10,
                        "visibility": "private"
                    },
                    {
                        "name": "addressesToCache",
                        "constant": false,
                        "type": "bytes32[24]",
                        "lineNumber": 12,
                        "visibility": "private"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "MixinResolver"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/TestablePausable.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/Pausable.sol"
        ],
        "contracts": {
            "TestablePausable": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "Pausable"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 13
                    },
                    {
                        "name": "setSomeValue",
                        "signature": "setSomeValue(uint256 _value)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "notPaused"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 15
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "someValue",
                        "constant": false,
                        "type": "uint256",
                        "lineNumber": 11,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "Pausable"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/TestableSelfDestructible.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/SelfDestructible.sol"
        ],
        "contracts": {
            "TestableSelfDestructible": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "SelfDestructible"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 8
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "SelfDestructible"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/TestableState.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/State.sol"
        ],
        "contracts": {
            "TestableState": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _associatedContract)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned",
                            "State"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 8
                    },
                    {
                        "name": "testModifier",
                        "signature": "testModifier()",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyAssociatedContract"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 10
                    }
                ],
                "events": [],
                "variables": [],
                "modifiers": [],
                "structs": [],
                "inherits": [
                    "Owned",
                    "State"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/TokenExchanger.sol": {
        "imports": [
            "contracts/Owned.sol",
            "contracts/interfaces/ISynthetix.sol",
            "contracts/interfaces/IFeePool.sol",
            "contracts/interfaces/IERC20.sol"
        ],
        "contracts": {
            "TokenExchanger": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(address _owner, address _integrationProxy)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "Owned"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 16
                    },
                    {
                        "name": "setSynthetixProxy",
                        "signature": "setSynthetixProxy(address _integrationProxy)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 20
                    },
                    {
                        "name": "setSynthetix",
                        "signature": "setSynthetix(address _synthetix)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [
                            "onlyOwner"
                        ],
                        "visibility": "external",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 24
                    },
                    {
                        "name": "checkBalance",
                        "signature": "checkBalance(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "synthetixProxyIsSet"
                        ],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 28
                    },
                    {
                        "name": "checkAllowance",
                        "signature": "checkAllowance(address tokenOwner, address spender)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "synthetixProxyIsSet"
                        ],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 32
                    },
                    {
                        "name": "checkBalanceSNXDirect",
                        "signature": "checkBalanceSNXDirect(address account)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [
                            "synthetixProxyIsSet"
                        ],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 36
                    },
                    {
                        "name": "getDecimals",
                        "signature": "getDecimals(address tokenAddress)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "view",
                        "requires": [],
                        "lineNumber": 40
                    },
                    {
                        "name": "doTokenSpend",
                        "signature": "doTokenSpend(address fromAccount, address toAccount, uint256 amount)",
                        "returns": "(bool)",
                        "events": [],
                        "modifiers": [
                            "synthetixProxyIsSet"
                        ],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [
                            {
                                "lineNumber": 50,
                                "name": "require(..., fromAccount does not have the required balance to spend)"
                            },
                            {
                                "lineNumber": 53,
                                "name": "require(..., I TokenExchanger, do not have approval to spend this guys tokens)"
                            }
                        ],
                        "lineNumber": 44
                    }
                ],
                "events": [
                    {
                        "name": "LogString",
                        "parameters": "(string name, string value)",
                        "lineNumber": 67
                    },
                    {
                        "name": "LogInt",
                        "parameters": "(string name, uint256 value)",
                        "lineNumber": 68
                    },
                    {
                        "name": "LogAddress",
                        "parameters": "(string name, address value)",
                        "lineNumber": 69
                    },
                    {
                        "name": "LogBytes",
                        "parameters": "(string name, bytes4 value)",
                        "lineNumber": 70
                    }
                ],
                "variables": [
                    {
                        "name": "integrationProxy",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 13,
                        "visibility": "public"
                    },
                    {
                        "name": "synthetix",
                        "constant": false,
                        "type": "address",
                        "lineNumber": 14,
                        "visibility": "public"
                    }
                ],
                "modifiers": [
                    {
                        "name": "synthetixProxyIsSet",
                        "parameters": "()",
                        "visibility": "internal",
                        "lineNumber": 62
                    }
                ],
                "structs": [],
                "inherits": [
                    "Owned"
                ]
            }
        },
        "interfaces": {},
        "libraries": {}
    },
    "contracts/test-helpers/UsingReadProxy.sol": {
        "imports": [
            "contracts/interfaces/IAddressResolver.sol",
            "contracts/interfaces/IExchangeRates.sol"
        ],
        "contracts": {
            "UsingReadProxy": {
                "functions": [
                    {
                        "name": "constructor",
                        "signature": "(contract IAddressResolver _resolver)",
                        "returns": "()",
                        "events": [],
                        "modifiers": [],
                        "visibility": "public",
                        "stateMutability": "nonpayable",
                        "requires": [],
                        "lineNumber": 10
                    },
                    {
                        "name": "run",
                        "signature": "run(bytes32 currencyKey)",
                        "returns": "(uint256)",
                        "events": [],
                        "modifiers": [],
                        "visibility": "external",
                        "stateMutability": "view",
                        "requires": [
                            {
                                "lineNumber": 16,
                                "name": "require(..., Missing ExchangeRates)"
                            }
                        ],
                        "lineNumber": 14
                    }
                ],
                "events": [],
                "variables": [
                    {
                        "name": "resolver",
                        "constant": false,
                        "type": "contract IAddressResolver",
                        "lineNumber": 8,
                        "visibility": "public"
                    }
                ],
                "modifiers": [],
                "structs": [],
                "inherits": []
            }
        },
        "interfaces": {},
        "libraries": {}
    }
}